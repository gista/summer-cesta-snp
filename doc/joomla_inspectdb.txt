# This is an auto-generated Django model module.
# You'll have to do the following manually to clean this up:
#     * Rearrange models' order
#     * Make sure each model has one field with primary_key=True
# Feel free to rename the models, but don't rename db_table values or field names.
#
# Also note: You'll have to insert the output of 'django-admin.py sqlcustom [appname]'
# into your database.

from django.db import models

class JosAcymailingConfig(models.Model):
    namekey = models.CharField(max_length=600, primary_key=True)
    value = models.TextField(blank=True)
    class Meta:
        db_table = u'jos_acymailing_config'

class JosAcymailingFields(models.Model):
    fieldid = models.IntegerField(primary_key=True)
    fieldname = models.CharField(max_length=750)
    namekey = models.CharField(unique=True, max_length=150)
    type = models.CharField(max_length=150, blank=True)
    value = models.TextField()
    published = models.IntegerField()
    ordering = models.IntegerField(null=True, blank=True)
    options = models.TextField(blank=True)
    core = models.IntegerField()
    required = models.IntegerField()
    backend = models.IntegerField()
    frontcomp = models.IntegerField()
    default = models.CharField(max_length=750, blank=True)
    listing = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'jos_acymailing_fields'

class JosAcymailingFilter(models.Model):
    filid = models.IntegerField(primary_key=True)
    name = models.CharField(max_length=750, blank=True)
    description = models.TextField(blank=True)
    published = models.IntegerField(null=True, blank=True)
    lasttime = models.IntegerField(null=True, blank=True)
    trigger = models.TextField(blank=True)
    report = models.TextField(blank=True)
    action = models.TextField(blank=True)
    filter = models.TextField(blank=True)
    class Meta:
        db_table = u'jos_acymailing_filter'

class JosAcymailingList(models.Model):
    name = models.CharField(max_length=750)
    description = models.TextField(blank=True)
    ordering = models.IntegerField(null=True, blank=True)
    listid = models.IntegerField(primary_key=True)
    published = models.IntegerField(null=True, blank=True)
    userid = models.IntegerField(null=True, blank=True)
    alias = models.CharField(max_length=750, blank=True)
    color = models.CharField(max_length=90, blank=True)
    visible = models.IntegerField()
    welmailid = models.IntegerField(null=True, blank=True)
    unsubmailid = models.IntegerField(null=True, blank=True)
    type = models.CharField(max_length=24)
    access_sub = models.CharField(max_length=750, blank=True)
    access_manage = models.CharField(max_length=750)
    languages = models.CharField(max_length=750)
    class Meta:
        db_table = u'jos_acymailing_list'

class JosAcymailingListcampaign(models.Model):
    campaignid = models.IntegerField(primary_key=True)
    listid = models.IntegerField(primary_key=True)
    class Meta:
        db_table = u'jos_acymailing_listcampaign'

class JosAcymailingListmail(models.Model):
    listid = models.IntegerField(primary_key=True)
    mailid = models.IntegerField(primary_key=True)
    class Meta:
        db_table = u'jos_acymailing_listmail'

class JosAcymailingListsub(models.Model):
    listid = models.IntegerField(primary_key=True)
    subid = models.IntegerField(primary_key=True)
    subdate = models.IntegerField(null=True, blank=True)
    unsubdate = models.IntegerField(null=True, blank=True)
    status = models.IntegerField()
    class Meta:
        db_table = u'jos_acymailing_listsub'

class JosAcymailingMail(models.Model):
    mailid = models.IntegerField(primary_key=True)
    subject = models.CharField(max_length=750)
    body = models.TextField()
    altbody = models.TextField()
    published = models.IntegerField(null=True, blank=True)
    senddate = models.IntegerField(null=True, blank=True)
    created = models.IntegerField(null=True, blank=True)
    fromname = models.CharField(max_length=750)
    fromemail = models.CharField(max_length=750)
    replyname = models.CharField(max_length=750)
    replyemail = models.CharField(max_length=750)
    type = models.CharField(max_length=36)
    visible = models.IntegerField()
    userid = models.IntegerField(null=True, blank=True)
    alias = models.CharField(max_length=750, blank=True)
    attach = models.TextField(blank=True)
    html = models.IntegerField()
    tempid = models.IntegerField()
    key = models.CharField(max_length=600, blank=True)
    frequency = models.CharField(max_length=150, blank=True)
    params = models.TextField(blank=True)
    sentby = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'jos_acymailing_mail'

class JosAcymailingQueue(models.Model):
    senddate = models.IntegerField()
    subid = models.IntegerField(primary_key=True)
    mailid = models.IntegerField(primary_key=True)
    priority = models.IntegerField(null=True, blank=True)
    try_field = models.IntegerField(db_column='try') # Field renamed because it was a Python reserved word.
    class Meta:
        db_table = u'jos_acymailing_queue'

class JosAcymailingStats(models.Model):
    mailid = models.IntegerField(primary_key=True)
    senthtml = models.IntegerField()
    senttext = models.IntegerField()
    senddate = models.IntegerField()
    openunique = models.IntegerField()
    opentotal = models.IntegerField()
    bounceunique = models.IntegerField()
    fail = models.IntegerField()
    clicktotal = models.IntegerField()
    clickunique = models.IntegerField()
    unsub = models.IntegerField()
    forward = models.IntegerField()
    class Meta:
        db_table = u'jos_acymailing_stats'

class JosAcymailingSubscriber(models.Model):
    subid = models.IntegerField(primary_key=True)
    email = models.CharField(unique=True, max_length=600)
    userid = models.IntegerField(null=True, blank=True)
    name = models.CharField(max_length=750)
    created = models.IntegerField(null=True, blank=True)
    confirmed = models.IntegerField()
    enabled = models.IntegerField()
    accept = models.IntegerField()
    ip = models.CharField(max_length=300, blank=True)
    html = models.IntegerField()
    key = models.CharField(max_length=750, blank=True)
    class Meta:
        db_table = u'jos_acymailing_subscriber'

class JosAcymailingTemplate(models.Model):
    tempid = models.IntegerField(primary_key=True)
    name = models.CharField(max_length=750, blank=True)
    description = models.TextField(blank=True)
    body = models.TextField(blank=True)
    altbody = models.TextField(blank=True)
    created = models.IntegerField(null=True, blank=True)
    published = models.IntegerField()
    premium = models.IntegerField()
    ordering = models.IntegerField()
    namekey = models.CharField(unique=True, max_length=150)
    styles = models.TextField(blank=True)
    subject = models.CharField(max_length=750, blank=True)
    stylesheet = models.TextField(blank=True)
    fromname = models.CharField(max_length=750, blank=True)
    fromemail = models.CharField(max_length=750, blank=True)
    replyname = models.CharField(max_length=750, blank=True)
    replyemail = models.CharField(max_length=750, blank=True)
    class Meta:
        db_table = u'jos_acymailing_template'

class JosAcymailingUrl(models.Model):
    urlid = models.IntegerField(primary_key=True)
    name = models.CharField(max_length=750)
    url = models.CharField(unique=True, max_length=750)
    class Meta:
        db_table = u'jos_acymailing_url'

class JosAcymailingUrlclick(models.Model):
    urlid = models.IntegerField(primary_key=True)
    mailid = models.IntegerField(primary_key=True)
    click = models.IntegerField()
    subid = models.IntegerField(primary_key=True)
    date = models.IntegerField()
    class Meta:
        db_table = u'jos_acymailing_urlclick'

class JosAcymailingUserstats(models.Model):
    mailid = models.IntegerField(primary_key=True)
    subid = models.IntegerField(primary_key=True)
    html = models.IntegerField()
    sent = models.IntegerField()
    senddate = models.IntegerField()
    open = models.IntegerField()
    opendate = models.IntegerField()
    bounce = models.IntegerField()
    fail = models.IntegerField()
    class Meta:
        db_table = u'jos_acymailing_userstats'

class JosAicontactsafeConfig(models.Model):
    id = models.IntegerField(primary_key=True)
    config_key = models.CharField(max_length=150)
    config_value = models.TextField()
    class Meta:
        db_table = u'jos_aicontactsafe_config'

class JosAicontactsafeContactinformations(models.Model):
    id = models.IntegerField(primary_key=True)
    profile_id = models.IntegerField()
    info_key = models.CharField(max_length=150)
    info_label = models.CharField(max_length=750)
    info_value = models.TextField()
    class Meta:
        db_table = u'jos_aicontactsafe_contactinformations'

class JosAicontactsafeFields(models.Model):
    id = models.IntegerField(primary_key=True)
    name = models.CharField(max_length=150)
    field_label = models.TextField()
    label_parameters = models.TextField()
    field_label_message = models.TextField()
    label_message_parameters = models.TextField()
    label_after_field = models.IntegerField()
    field_type = models.CharField(max_length=6)
    field_parameters = models.TextField()
    field_values = models.TextField()
    field_limit = models.IntegerField()
    default_value = models.CharField(max_length=450)
    auto_fill = models.CharField(max_length=30)
    field_sufix = models.TextField()
    field_prefix = models.TextField()
    ordering = models.IntegerField()
    field_required = models.IntegerField()
    field_in_message = models.IntegerField()
    send_message = models.IntegerField()
    date_added = models.DateTimeField()
    last_update = models.DateTimeField()
    published = models.IntegerField()
    checked_out = models.IntegerField()
    checked_out_time = models.DateField()
    class Meta:
        db_table = u'jos_aicontactsafe_fields'

class JosAicontactsafeFieldvalues(models.Model):
    id = models.IntegerField(primary_key=True)
    field_id = models.IntegerField()
    message_id = models.IntegerField()
    field_value = models.TextField()
    date_added = models.DateTimeField()
    last_update = models.DateTimeField()
    published = models.IntegerField()
    checked_out = models.IntegerField()
    checked_out_time = models.DateField()
    class Meta:
        db_table = u'jos_aicontactsafe_fieldvalues'

class JosAicontactsafeMessagefiles(models.Model):
    id = models.IntegerField(primary_key=True)
    message_id = models.IntegerField()
    name = models.TextField()
    r_id = models.IntegerField()
    date_added = models.DateTimeField()
    last_update = models.DateTimeField()
    published = models.IntegerField()
    checked_out = models.IntegerField()
    checked_out_time = models.DateField()
    class Meta:
        db_table = u'jos_aicontactsafe_messagefiles'

class JosAicontactsafeMessages(models.Model):
    id = models.IntegerField(primary_key=True)
    name = models.CharField(max_length=150)
    email = models.CharField(max_length=300)
    subject = models.CharField(max_length=600)
    message = models.TextField()
    send_to_sender = models.IntegerField()
    sender_ip = models.CharField(max_length=60)
    profile_id = models.IntegerField()
    email_replay = models.CharField(max_length=300)
    subject_replay = models.TextField()
    message_replay = models.TextField()
    email_reply = models.CharField(max_length=300)
    subject_reply = models.TextField()
    message_reply = models.TextField()
    date_added = models.DateTimeField()
    last_update = models.DateTimeField()
    published = models.IntegerField()
    checked_out = models.IntegerField()
    checked_out_time = models.DateField()
    class Meta:
        db_table = u'jos_aicontactsafe_messages'

class JosAicontactsafeProfiles(models.Model):
    id = models.IntegerField(primary_key=True)
    name = models.CharField(max_length=150)
    use_ajax = models.IntegerField()
    use_message_css = models.IntegerField()
    contact_form_width = models.IntegerField()
    contact_info_width = models.IntegerField()
    use_captcha = models.IntegerField()
    captcha_type = models.IntegerField()
    email_address = models.CharField(max_length=300)
    always_send_to_email_address = models.IntegerField()
    subject_prefix = models.CharField(max_length=300)
    email_mode = models.IntegerField()
    record_message = models.IntegerField()
    record_fields = models.IntegerField()
    custom_date_format = models.CharField(max_length=90)
    custom_date_years_back = models.IntegerField()
    custom_date_years_forward = models.IntegerField()
    required_field_mark = models.TextField()
    display_format = models.IntegerField()
    plg_contact_info = models.IntegerField()
    use_random_letters = models.IntegerField()
    min_word_length = models.IntegerField()
    max_word_length = models.IntegerField()
    set_default = models.IntegerField()
    active_fields = models.TextField()
    captcha_width = models.IntegerField()
    captcha_height = models.IntegerField()
    captcha_bgcolor = models.CharField(max_length=30)
    captcha_backgroundtransparent = models.IntegerField(db_column='captcha_backgroundTransparent') # Field name made lowercase.
    captcha_colors = models.TextField()
    name_field_id = models.IntegerField()
    email_field_id = models.IntegerField()
    subject_field_id = models.IntegerField()
    send_to_sender_field_id = models.IntegerField()
    redirect_on_success = models.TextField()
    fields_order = models.TextField()
    use_mail_template = models.IntegerField()
    date_added = models.DateTimeField()
    last_update = models.DateTimeField()
    published = models.IntegerField()
    checked_out = models.IntegerField()
    checked_out_time = models.DateField()
    class Meta:
        db_table = u'jos_aicontactsafe_profiles'

class JosAllwebmenus(models.Model):
    menutype = models.TextField()
    menuitemid = models.IntegerField()
    category = models.IntegerField()
    class Meta:
        db_table = u'jos_allwebmenus'

class JosAlphaRating(models.Model):
    ref = models.IntegerField(primary_key=True)
    id = models.IntegerField()
    total_votes = models.IntegerField()
    total_value = models.IntegerField()
    used_ips = models.TextField()
    component = models.CharField(max_length=90)
    cid = models.IntegerField()
    rid = models.IntegerField()
    class Meta:
        db_table = u'jos_alpha_rating'

class JosArtAdminerSetting(models.Model):
    id = models.IntegerField(primary_key=True)
    cssfile = models.CharField(max_length=765)
    autologin = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'jos_art_adminer_setting'

class JosAssignments(models.Model):
    id = models.IntegerField(primary_key=True)
    access_type = models.CharField(max_length=180)
    access_id = models.TextField()
    role = models.CharField(max_length=180)
    class Meta:
        db_table = u'jos_assignments'

class JosBanner(models.Model):
    bid = models.IntegerField(primary_key=True)
    cid = models.IntegerField()
    type = models.CharField(max_length=90)
    name = models.CharField(max_length=765)
    alias = models.CharField(max_length=765)
    imptotal = models.IntegerField()
    impmade = models.IntegerField()
    clicks = models.IntegerField()
    imageurl = models.CharField(max_length=300)
    clickurl = models.CharField(max_length=600)
    date = models.DateTimeField(null=True, blank=True)
    showbanner = models.IntegerField(db_column='showBanner') # Field name made lowercase.
    checked_out = models.IntegerField()
    checked_out_time = models.DateTimeField()
    editor = models.CharField(max_length=150, blank=True)
    custombannercode = models.TextField(blank=True)
    catid = models.IntegerField()
    description = models.TextField()
    sticky = models.IntegerField()
    ordering = models.IntegerField()
    publish_up = models.DateTimeField()
    publish_down = models.DateTimeField()
    tags = models.TextField()
    params = models.TextField()
    class Meta:
        db_table = u'jos_banner'

class JosBannerclient(models.Model):
    cid = models.IntegerField(primary_key=True)
    name = models.CharField(max_length=765)
    contact = models.CharField(max_length=765)
    email = models.CharField(max_length=765)
    extrainfo = models.TextField()
    checked_out = models.IntegerField()
    checked_out_time = models.TextField(blank=True) # This field type is a guess.
    editor = models.CharField(max_length=150, blank=True)
    class Meta:
        db_table = u'jos_bannerclient'

class JosBannertrack(models.Model):
    track_date = models.DateField()
    track_type = models.IntegerField()
    banner_id = models.IntegerField()
    class Meta:
        db_table = u'jos_bannertrack'

class JosCategories(models.Model):
    id = models.IntegerField(primary_key=True)
    parent_id = models.IntegerField()
    title = models.CharField(max_length=765)
    name = models.CharField(max_length=765)
    alias = models.CharField(max_length=765)
    image = models.CharField(max_length=765)
    section = models.CharField(max_length=150)
    image_position = models.CharField(max_length=90)
    description = models.TextField()
    published = models.IntegerField()
    checked_out = models.IntegerField()
    checked_out_time = models.DateTimeField()
    editor = models.CharField(max_length=150, blank=True)
    ordering = models.IntegerField()
    access = models.IntegerField()
    count = models.IntegerField()
    params = models.TextField()
    class Meta:
        db_table = u'jos_categories'

class JosCmsapiConfigurations(models.Model):
    component = models.CharField(max_length=300, primary_key=True)
    instance = models.IntegerField()
    configuration = models.TextField()
    class Meta:
        db_table = u'jos_cmsapi_configurations'

class JosComment(models.Model):
    id = models.IntegerField(primary_key=True)
    contentid = models.IntegerField()
    component = models.CharField(max_length=150)
    ip = models.CharField(max_length=45)
    userid = models.IntegerField(null=True, blank=True)
    usertype = models.CharField(max_length=75)
    date = models.DateTimeField()
    name = models.CharField(max_length=90)
    email = models.CharField(max_length=150)
    website = models.CharField(max_length=300)
    notify = models.IntegerField()
    title = models.CharField(max_length=150)
    comment = models.TextField()
    published = models.IntegerField()
    voting_yes = models.IntegerField()
    voting_no = models.IntegerField()
    parentid = models.IntegerField()
    importtable = models.CharField(max_length=90)
    importid = models.IntegerField()
    importparentid = models.IntegerField()
    class Meta:
        db_table = u'jos_comment'

class JosCommentCaptcha(models.Model):
    id = models.IntegerField(primary_key=True, db_column='ID') # Field name made lowercase.
    insertdate = models.DateTimeField()
    referenceid = models.CharField(max_length=300)
    hiddentext = models.CharField(max_length=300)
    class Meta:
        db_table = u'jos_comment_captcha'

class JosCommentJoomvertising(models.Model):
    id = models.IntegerField(primary_key=True)
    type = models.CharField(max_length=765)
    code = models.TextField()
    class Meta:
        db_table = u'jos_comment_joomvertising'

class JosCommentSetting(models.Model):
    id = models.IntegerField(primary_key=True)
    set_name = models.CharField(max_length=150)
    set_component = models.CharField(max_length=150)
    set_sectionid = models.IntegerField()
    params = models.TextField()
    class Meta:
        db_table = u'jos_comment_setting'

class JosCommentVoting(models.Model):
    id = models.IntegerField()
    ip = models.CharField(max_length=45)
    time = models.IntegerField()
    class Meta:
        db_table = u'jos_comment_voting'

class JosComponents(models.Model):
    id = models.IntegerField(primary_key=True)
    name = models.CharField(max_length=150)
    link = models.CharField(max_length=765)
    menuid = models.IntegerField()
    parent = models.IntegerField()
    admin_menu_link = models.CharField(max_length=765)
    admin_menu_alt = models.CharField(max_length=765)
    option = models.CharField(max_length=150)
    ordering = models.IntegerField()
    admin_menu_img = models.CharField(max_length=765)
    iscore = models.IntegerField()
    params = models.TextField()
    enabled = models.IntegerField()
    class Meta:
        db_table = u'jos_components'

class JosComprofiler(models.Model):
    id = models.IntegerField()
    user_id = models.IntegerField(unique=True)
    firstname = models.CharField(max_length=300, blank=True)
    middlename = models.CharField(max_length=300, blank=True)
    lastname = models.CharField(max_length=300, blank=True)
    hits = models.IntegerField()
    message_last_sent = models.DateTimeField()
    message_number_sent = models.IntegerField()
    avatar = models.CharField(max_length=765, blank=True)
    avatarapproved = models.IntegerField()
    approved = models.IntegerField()
    confirmed = models.IntegerField()
    lastupdatedate = models.DateTimeField()
    registeripaddr = models.CharField(max_length=150)
    cbactivation = models.CharField(max_length=150)
    banned = models.IntegerField()
    banneddate = models.DateTimeField(null=True, blank=True)
    unbanneddate = models.DateTimeField(null=True, blank=True)
    bannedby = models.IntegerField(null=True, blank=True)
    unbannedby = models.IntegerField(null=True, blank=True)
    bannedreason = models.TextField(blank=True)
    acceptedterms = models.IntegerField()
    cb_icq = models.CharField(max_length=765, blank=True)
    cb_skype = models.CharField(max_length=765, blank=True)
    cb_absolvovalsomsnp = models.CharField(max_length=765, blank=True)
    cb_web = models.CharField(max_length=765, blank=True)
    cb_nieoomne = models.CharField(max_length=765, blank=True)
    website = models.CharField(max_length=765, blank=True)
    location = models.CharField(max_length=765, blank=True)
    occupation = models.CharField(max_length=765, blank=True)
    interests = models.CharField(max_length=765, blank=True)
    company = models.CharField(max_length=765, blank=True)
    address = models.CharField(max_length=765, blank=True)
    city = models.CharField(max_length=765, blank=True)
    state = models.CharField(max_length=765, blank=True)
    zipcode = models.CharField(max_length=765, blank=True)
    country = models.CharField(max_length=765, blank=True)
    phone = models.CharField(max_length=765, blank=True)
    fax = models.CharField(max_length=765, blank=True)
    googlelatitudeid = models.CharField(max_length=765, blank=True)
    class Meta:
        db_table = u'jos_comprofiler'

class JosComprofilerFieldValues(models.Model):
    fieldvalueid = models.IntegerField(primary_key=True)
    fieldid = models.IntegerField()
    fieldtitle = models.CharField(max_length=765)
    ordering = models.IntegerField()
    sys = models.IntegerField()
    class Meta:
        db_table = u'jos_comprofiler_field_values'

class JosComprofilerFields(models.Model):
    fieldid = models.IntegerField(primary_key=True)
    name = models.CharField(max_length=150)
    tablecolumns = models.TextField()
    table = models.CharField(max_length=150)
    title = models.CharField(max_length=765)
    description = models.TextField()
    type = models.CharField(max_length=150)
    maxlength = models.IntegerField(null=True, blank=True)
    size = models.IntegerField(null=True, blank=True)
    required = models.IntegerField(null=True, blank=True)
    tabid = models.IntegerField(null=True, blank=True)
    ordering = models.IntegerField(null=True, blank=True)
    cols = models.IntegerField(null=True, blank=True)
    rows = models.IntegerField(null=True, blank=True)
    value = models.CharField(max_length=150, blank=True)
    default = models.TextField(blank=True)
    published = models.IntegerField()
    registration = models.IntegerField()
    profile = models.IntegerField()
    displaytitle = models.IntegerField()
    readonly = models.IntegerField()
    searchable = models.IntegerField()
    calculated = models.IntegerField()
    sys = models.IntegerField()
    pluginid = models.IntegerField()
    params = models.TextField(blank=True)
    class Meta:
        db_table = u'jos_comprofiler_fields'

class JosComprofilerLists(models.Model):
    listid = models.IntegerField(primary_key=True)
    title = models.CharField(max_length=765)
    description = models.TextField(blank=True)
    published = models.IntegerField()
    default = models.IntegerField()
    usergroupids = models.CharField(max_length=765, blank=True)
    useraccessgroupid = models.IntegerField()
    sortfields = models.CharField(max_length=765, blank=True)
    filterfields = models.TextField(blank=True)
    ordering = models.IntegerField()
    col1title = models.CharField(max_length=765, blank=True)
    col1enabled = models.IntegerField()
    col1fields = models.TextField(blank=True)
    col2title = models.CharField(max_length=765, blank=True)
    col2enabled = models.IntegerField()
    col1captions = models.IntegerField()
    col2fields = models.TextField(blank=True)
    col2captions = models.IntegerField()
    col3title = models.CharField(max_length=765, blank=True)
    col3enabled = models.IntegerField()
    col3fields = models.TextField(blank=True)
    col3captions = models.IntegerField()
    col4title = models.CharField(max_length=765, blank=True)
    col4enabled = models.IntegerField()
    col4fields = models.TextField(blank=True)
    col4captions = models.IntegerField()
    params = models.TextField(blank=True)
    class Meta:
        db_table = u'jos_comprofiler_lists'

class JosComprofilerMembers(models.Model):
    referenceid = models.IntegerField()
    memberid = models.IntegerField()
    accepted = models.IntegerField()
    pending = models.IntegerField()
    membersince = models.DateField()
    reason = models.TextField(blank=True)
    description = models.CharField(max_length=765, blank=True)
    type = models.TextField(blank=True)
    class Meta:
        db_table = u'jos_comprofiler_members'

class JosComprofilerPlugin(models.Model):
    id = models.IntegerField(primary_key=True)
    name = models.CharField(max_length=300)
    element = models.CharField(max_length=300)
    type = models.CharField(max_length=300, blank=True)
    folder = models.CharField(max_length=300, blank=True)
    backend_menu = models.CharField(max_length=765)
    access = models.IntegerField()
    ordering = models.IntegerField()
    published = models.IntegerField()
    iscore = models.IntegerField()
    client_id = models.IntegerField()
    checked_out = models.IntegerField()
    checked_out_time = models.DateTimeField()
    params = models.TextField()
    class Meta:
        db_table = u'jos_comprofiler_plugin'

class JosComprofilerSessions(models.Model):
    username = models.CharField(max_length=150)
    userid = models.IntegerField()
    ui = models.IntegerField()
    incoming_ip = models.CharField(max_length=117)
    client_ip = models.CharField(max_length=117)
    session_id = models.CharField(max_length=99, primary_key=True)
    session_data = models.TextField()
    expiry_time = models.IntegerField()
    class Meta:
        db_table = u'jos_comprofiler_sessions'

class JosComprofilerTabs(models.Model):
    tabid = models.IntegerField(primary_key=True)
    title = models.CharField(max_length=150)
    description = models.TextField(blank=True)
    ordering = models.IntegerField()
    ordering_register = models.IntegerField()
    width = models.CharField(max_length=30)
    enabled = models.IntegerField()
    pluginclass = models.CharField(max_length=765, blank=True)
    pluginid = models.IntegerField(null=True, blank=True)
    fields = models.IntegerField()
    params = models.TextField(blank=True)
    sys = models.IntegerField()
    displaytype = models.CharField(max_length=765)
    position = models.CharField(max_length=765)
    useraccessgroupid = models.IntegerField()
    class Meta:
        db_table = u'jos_comprofiler_tabs'

class JosComprofilerUserreports(models.Model):
    reportid = models.IntegerField(primary_key=True)
    reporteduser = models.IntegerField()
    reportedbyuser = models.IntegerField()
    reportedondate = models.DateField()
    reportexplaination = models.TextField()
    reportedstatus = models.IntegerField()
    class Meta:
        db_table = u'jos_comprofiler_userreports'

class JosComprofilerViews(models.Model):
    viewer_id = models.IntegerField()
    profile_id = models.IntegerField()
    lastip = models.CharField(max_length=150, primary_key=True)
    lastview = models.DateTimeField()
    viewscount = models.IntegerField()
    vote = models.IntegerField(null=True, blank=True)
    lastvote = models.DateTimeField()
    class Meta:
        db_table = u'jos_comprofiler_views'

class JosContactDetails(models.Model):
    id = models.IntegerField(primary_key=True)
    name = models.CharField(max_length=765)
    alias = models.CharField(max_length=765)
    con_position = models.CharField(max_length=765, blank=True)
    address = models.TextField(blank=True)
    suburb = models.CharField(max_length=300, blank=True)
    state = models.CharField(max_length=300, blank=True)
    country = models.CharField(max_length=300, blank=True)
    postcode = models.CharField(max_length=300, blank=True)
    telephone = models.CharField(max_length=765, blank=True)
    fax = models.CharField(max_length=765, blank=True)
    misc = models.TextField(blank=True)
    image = models.CharField(max_length=765, blank=True)
    imagepos = models.CharField(max_length=60, blank=True)
    email_to = models.CharField(max_length=765, blank=True)
    default_con = models.IntegerField()
    published = models.IntegerField()
    checked_out = models.IntegerField()
    checked_out_time = models.DateTimeField()
    ordering = models.IntegerField()
    params = models.TextField()
    user_id = models.IntegerField()
    catid = models.IntegerField()
    access = models.IntegerField()
    mobile = models.CharField(max_length=765)
    webpage = models.CharField(max_length=765)
    class Meta:
        db_table = u'jos_contact_details'

class JosContent(models.Model):
    id = models.IntegerField(primary_key=True)
    title = models.CharField(max_length=765)
    alias = models.CharField(max_length=765)
    title_alias = models.CharField(max_length=765)
    introtext = models.TextField()
    fulltext = models.TextField()
    state = models.IntegerField()
    sectionid = models.IntegerField()
    mask = models.IntegerField()
    catid = models.IntegerField()
    created = models.DateTimeField()
    created_by = models.IntegerField()
    created_by_alias = models.CharField(max_length=765)
    modified = models.DateTimeField()
    modified_by = models.IntegerField()
    checked_out = models.IntegerField()
    checked_out_time = models.DateTimeField()
    publish_up = models.DateTimeField()
    publish_down = models.DateTimeField()
    images = models.TextField()
    urls = models.TextField()
    attribs = models.TextField()
    version = models.IntegerField()
    parentid = models.IntegerField()
    ordering = models.IntegerField()
    metakey = models.TextField()
    metadesc = models.TextField()
    access = models.IntegerField()
    hits = models.IntegerField()
    metadata = models.TextField()
    class Meta:
        db_table = u'jos_content'

class JosContentFrontpage(models.Model):
    content_id = models.IntegerField(primary_key=True)
    ordering = models.IntegerField()
    class Meta:
        db_table = u'jos_content_frontpage'

class JosContentRating(models.Model):
    content_id = models.IntegerField(primary_key=True)
    rating_sum = models.IntegerField()
    rating_count = models.IntegerField()
    lastip = models.CharField(max_length=150)
    class Meta:
        db_table = u'jos_content_rating'

class JosCoreAclAro(models.Model):
    id = models.IntegerField(primary_key=True)
    section_value = models.CharField(unique=True, max_length=720)
    value = models.CharField(unique=True, max_length=720)
    order_value = models.IntegerField()
    name = models.CharField(max_length=765)
    hidden = models.IntegerField()
    class Meta:
        db_table = u'jos_core_acl_aro'

class JosCoreAclAroGroups(models.Model):
    id = models.IntegerField(primary_key=True)
    parent_id = models.IntegerField()
    name = models.CharField(max_length=765)
    lft = models.IntegerField()
    rgt = models.IntegerField()
    value = models.CharField(max_length=765)
    class Meta:
        db_table = u'jos_core_acl_aro_groups'

class JosCoreAclAroMap(models.Model):
    acl_id = models.IntegerField(primary_key=True)
    section_value = models.CharField(max_length=690, primary_key=True)
    value = models.CharField(max_length=300, primary_key=True)
    class Meta:
        db_table = u'jos_core_acl_aro_map'

class JosCoreAclAroSections(models.Model):
    id = models.IntegerField(primary_key=True)
    value = models.CharField(unique=True, max_length=690)
    order_value = models.IntegerField()
    name = models.CharField(max_length=690)
    hidden = models.IntegerField()
    class Meta:
        db_table = u'jos_core_acl_aro_sections'

class JosCoreAclGroupsAroMap(models.Model):
    group_id = models.IntegerField(unique=True)
    section_value = models.CharField(unique=True, max_length=720)
    aro_id = models.IntegerField(unique=True)
    class Meta:
        db_table = u'jos_core_acl_groups_aro_map'

class JosCoreLogItems(models.Model):
    time_stamp = models.DateField()
    item_table = models.CharField(max_length=150)
    item_id = models.IntegerField()
    hits = models.IntegerField()
    class Meta:
        db_table = u'jos_core_log_items'

class JosCoreLogSearches(models.Model):
    search_term = models.CharField(max_length=384)
    hits = models.IntegerField()
    class Meta:
        db_table = u'jos_core_log_searches'

class JosDatabaza(models.Model):
    id = models.IntegerField(db_column='ID') # Field name made lowercase.
    vrstva = models.IntegerField()
    title = models.TextField()
    description = models.TextField()
    lon = models.TextField()
    lat = models.TextField()
    icon_size = models.TextField()
    icon = models.TextField()
    url = models.TextField()
    foto = models.TextField()
    class Meta:
        db_table = u'jos_databaza'

class JosDatafeedsBak(models.Model):
    feed_id = models.IntegerField(primary_key=True)
    feed = models.CharField(unique=True, max_length=150)
    freq = models.IntegerField()
    last_update = models.DateTimeField()
    merchant_name = models.CharField(max_length=765)
    merchant_img = models.CharField(max_length=765)
    merchant_url = models.TextField()
    merchant_description = models.TextField()
    published = models.IntegerField()
    feed_url = models.TextField()
    menu_1 = models.CharField(max_length=150)
    menu_2 = models.CharField(max_length=150)
    menu_3 = models.CharField(max_length=150)
    menu_4 = models.CharField(max_length=150)
    menu_5 = models.CharField(max_length=150)
    menu_6 = models.CharField(max_length=150)
    menu_7 = models.CharField(max_length=150)
    menu_8 = models.CharField(max_length=150)
    menu_9 = models.CharField(max_length=150)
    title = models.CharField(max_length=150)
    href = models.CharField(max_length=150)
    image = models.CharField(max_length=150)
    prijs = models.CharField(max_length=150)
    list_1 = models.CharField(max_length=150)
    list_2 = models.CharField(max_length=150)
    list_3 = models.CharField(max_length=150)
    list_4 = models.CharField(max_length=150)
    list_5 = models.CharField(max_length=150)
    callback = models.CharField(max_length=150)
    class_field = models.CharField(max_length=150, db_column='class') # Field renamed because it was a Python reserved word.
    input_encoding = models.CharField(max_length=150)
    detect_encoding = models.IntegerField()
    example = models.TextField()
    example_raw = models.TextField()
    text_1 = models.CharField(max_length=150)
    text_2 = models.CharField(max_length=150)
    text_3 = models.CharField(max_length=150)
    text_4 = models.CharField(max_length=150)
    text_5 = models.CharField(max_length=150)
    groep = models.TextField()
    data = models.TextField()
    class Meta:
        db_table = u'jos_datafeeds_bak'

class JosDbcache(models.Model):
    id = models.CharField(max_length=96, primary_key=True)
    groupname = models.CharField(max_length=96)
    expire = models.DateTimeField()
    value = models.TextField()
    class Meta:
        db_table = u'jos_dbcache'

class JosDiscussionsCategories(models.Model):
    id = models.IntegerField(primary_key=True)
    parent_id = models.IntegerField()
    name = models.CharField(max_length=765)
    alias = models.CharField(max_length=765, blank=True)
    description = models.CharField(max_length=600)
    image = models.CharField(max_length=300, blank=True)
    show_image = models.IntegerField(null=True, blank=True)
    published = models.IntegerField()
    created = models.DateTimeField(null=True, blank=True)
    modified = models.DateTimeField(null=True, blank=True)
    counter_posts = models.IntegerField()
    counter_threads = models.IntegerField()
    last_entry_date = models.DateTimeField()
    last_entry_user_id = models.IntegerField()
    ordering = models.IntegerField()
    private = models.IntegerField()
    moderated = models.IntegerField()
    class Meta:
        db_table = u'jos_discussions_categories'

class JosDiscussionsMessages(models.Model):
    id = models.IntegerField(primary_key=True)
    parent_id = models.IntegerField()
    cat_id = models.IntegerField()
    thread = models.IntegerField()
    user_id = models.IntegerField()
    account = models.CharField(max_length=150)
    name = models.CharField(max_length=300)
    email = models.CharField(max_length=300)
    ip = models.CharField(max_length=300)
    type = models.IntegerField()
    subject = models.CharField(max_length=765)
    alias = models.CharField(max_length=765, blank=True)
    message = models.TextField()
    date = models.DateTimeField(null=True, blank=True)
    hits = models.IntegerField()
    locked = models.IntegerField()
    published = models.IntegerField()
    counter_replies = models.IntegerField()
    last_entry_date = models.DateTimeField()
    last_entry_user_id = models.IntegerField()
    last_entry_msg_id = models.IntegerField()
    sticky = models.IntegerField()
    wfm = models.IntegerField(null=True, blank=True)
    image1 = models.CharField(max_length=765, blank=True)
    image1_description = models.CharField(max_length=765, blank=True)
    image2 = models.CharField(max_length=765, blank=True)
    image2_description = models.CharField(max_length=765, blank=True)
    image3 = models.CharField(max_length=765, blank=True)
    image3_description = models.CharField(max_length=765, blank=True)
    image4 = models.CharField(max_length=765, blank=True)
    image4_description = models.CharField(max_length=765, blank=True)
    image5 = models.CharField(max_length=765, blank=True)
    image5_description = models.CharField(max_length=765, blank=True)
    class Meta:
        db_table = u'jos_discussions_messages'

class JosDiscussionsMeta(models.Model):
    id = models.IntegerField(primary_key=True)
    version = models.CharField(max_length=300, blank=True)
    class Meta:
        db_table = u'jos_discussions_meta'

class JosDiscussionsUsers(models.Model):
    id = models.IntegerField(primary_key=True)
    username = models.CharField(max_length=450, blank=True)
    view = models.IntegerField()
    ordering = models.IntegerField()
    posts = models.IntegerField()
    status = models.IntegerField()
    avatar = models.CharField(max_length=300, blank=True)
    signature = models.TextField(blank=True)
    title = models.CharField(max_length=300, blank=True)
    zipcode = models.CharField(max_length=30, blank=True)
    city = models.CharField(max_length=300, blank=True)
    country = models.CharField(max_length=300, blank=True)
    moderator = models.IntegerField()
    moderated = models.IntegerField()
    rookie = models.IntegerField()
    trusted = models.IntegerField()
    images = models.IntegerField()
    files = models.IntegerField()
    website = models.CharField(max_length=300, blank=True)
    twitter = models.CharField(max_length=300, blank=True)
    facebook = models.CharField(max_length=300, blank=True)
    flickr = models.CharField(max_length=300, blank=True)
    youtube = models.CharField(max_length=300, blank=True)
    email_notification = models.IntegerField(null=True, blank=True)
    approval_notification = models.IntegerField(null=True, blank=True)
    show_online_status = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'jos_discussions_users'

class JosDownloadsBlob(models.Model):
    id = models.IntegerField(unique=True)
    fileid = models.IntegerField()
    chunkid = models.IntegerField(unique=True)
    bloblength = models.IntegerField()
    datachunk = models.TextField()
    class Meta:
        db_table = u'jos_downloads_blob'

class JosDownloadsClassify(models.Model):
    id = models.IntegerField(primary_key=True)
    sequence = models.IntegerField()
    windowtitle = models.CharField(max_length=765)
    keywords = models.CharField(max_length=765)
    frequency = models.IntegerField()
    published = models.IntegerField()
    hidden = models.IntegerField()
    type = models.CharField(max_length=90)
    name = models.CharField(max_length=300)
    description = models.TextField()
    class Meta:
        db_table = u'jos_downloads_classify'

class JosDownloadsContainers(models.Model):
    id = models.IntegerField(unique=True)
    sequence = models.IntegerField()
    windowtitle = models.CharField(max_length=765)
    keywords = models.CharField(max_length=765)
    parentid = models.IntegerField()
    name = models.CharField(max_length=765)
    alias = models.CharField(max_length=765)
    filepath = models.CharField(max_length=765)
    published = models.IntegerField()
    description = models.TextField()
    filecount = models.IntegerField()
    foldercount = models.IntegerField()
    icon = models.CharField(max_length=150)
    registered = models.IntegerField()
    userupload = models.IntegerField()
    countdown = models.IntegerField()
    childcountdown = models.IntegerField()
    countup = models.IntegerField()
    childcountup = models.IntegerField()
    plaintext = models.IntegerField()
    groupid = models.IntegerField()
    editgroup = models.IntegerField()
    adminauto = models.IntegerField()
    userauto = models.IntegerField()
    autogroup = models.IntegerField()
    userid = models.IntegerField()
    class Meta:
        db_table = u'jos_downloads_containers'

class JosDownloadsFileClassify(models.Model):
    file_id = models.IntegerField(primary_key=True)
    classify_id = models.IntegerField(primary_key=True)
    class Meta:
        db_table = u'jos_downloads_file_classify'

class JosDownloadsFiles(models.Model):
    id = models.IntegerField(unique=True)
    repnum = models.IntegerField()
    sequence = models.IntegerField()
    windowtitle = models.CharField(max_length=765)
    keywords = models.CharField(max_length=765)
    metatype = models.IntegerField()
    realname = models.CharField(max_length=765)
    realwithid = models.IntegerField()
    islocal = models.IntegerField()
    containerid = models.IntegerField()
    userid = models.IntegerField()
    filepath = models.CharField(max_length=765)
    filesize = models.CharField(max_length=765)
    filetype = models.CharField(max_length=765)
    filetitle = models.CharField(max_length=765)
    subtitle = models.TextField()
    description = models.TextField()
    smalldesc = models.TextField()
    autoshort = models.IntegerField()
    license = models.TextField()
    licenseagree = models.IntegerField()
    price = models.IntegerField()
    currency = models.CharField(max_length=9)
    downloads = models.IntegerField()
    listings = models.IntegerField()
    viewings = models.IntegerField()
    url = models.CharField(max_length=765)
    icon = models.CharField(max_length=150)
    published = models.IntegerField()
    publish_from = models.DateTimeField()
    publish_to = models.DateTimeField()
    republish_num = models.IntegerField()
    republish_unit = models.IntegerField()
    registered = models.IntegerField()
    userupload = models.IntegerField()
    download_text = models.TextField()
    recommended = models.IntegerField()
    recommend_text = models.TextField()
    featured = models.IntegerField()
    featured_st_date = models.DateField()
    featured_end_date = models.DateField()
    featured_priority = models.IntegerField()
    featured_seq = models.IntegerField()
    featured_text = models.TextField()
    opsystem = models.CharField(max_length=150)
    legaltype = models.CharField(max_length=150)
    requirements = models.TextField()
    company = models.CharField(max_length=765)
    releasedate = models.DateField()
    languages = models.TextField()
    company_url = models.CharField(max_length=765, db_column='company_URL') # Field name made lowercase.
    translator = models.CharField(max_length=765)
    fileversion = models.CharField(max_length=150)
    fileauthor = models.CharField(max_length=300)
    author_url = models.CharField(max_length=765, db_column='author_URL') # Field name made lowercase.
    author_email = models.CharField(max_length=765)
    publish_id = models.CharField(max_length=150)
    publish_date = models.DateField()
    filedate = models.DateTimeField()
    filehomepage = models.CharField(max_length=765)
    screenurl = models.CharField(max_length=765)
    plaintext = models.IntegerField()
    isblob = models.IntegerField()
    chunkcount = models.IntegerField()
    groupid = models.IntegerField()
    editgroup = models.IntegerField()
    custom_1 = models.CharField(max_length=765)
    custom_2 = models.CharField(max_length=765)
    custom_3 = models.TextField()
    custom_4 = models.IntegerField()
    custom_5 = models.DateTimeField()
    oldid = models.IntegerField()
    submittedby = models.IntegerField()
    submitdate = models.DateTimeField()
    custom_values = models.TextField()
    class Meta:
        db_table = u'jos_downloads_files'

class JosDownloadsLog(models.Model):
    id = models.IntegerField(unique=True)
    type = models.IntegerField()
    date = models.DateTimeField()
    userid = models.IntegerField()
    fileid = models.IntegerField()
    value = models.IntegerField()
    ipaddress = models.CharField(max_length=45)
    class Meta:
        db_table = u'jos_downloads_log'

class JosDownloadsRepository(models.Model):
    id = models.IntegerField(unique=True)
    name = models.CharField(max_length=765)
    alias = models.CharField(max_length=765)
    sequence = models.IntegerField()
    windowtitle = models.CharField(max_length=765)
    keywords = models.CharField(max_length=765)
    version = models.CharField(max_length=30)
    use_database = models.IntegerField(db_column='Use_Database') # Field name made lowercase.
    main_page_title = models.CharField(max_length=300, db_column='Main_Page_Title') # Field name made lowercase.
    tabclass = models.CharField(max_length=765)
    tabheader = models.CharField(max_length=765)
    headerpic = models.CharField(max_length=765)
    extsok = models.CharField(max_length=765, db_column='ExtsOk') # Field name made lowercase.
    extsdisplay = models.CharField(max_length=765, db_column='ExtsDisplay') # Field name made lowercase.
    extsaudio = models.CharField(max_length=765, db_column='ExtsAudio') # Field name made lowercase.
    extsvideo = models.CharField(max_length=765, db_column='ExtsVideo') # Field name made lowercase.
    classification_types = models.CharField(max_length=765, db_column='Classification_Types') # Field name made lowercase.
    scribd = models.CharField(max_length=90, db_column='Scribd') # Field name made lowercase.
    down_path = models.CharField(max_length=765, db_column='Down_Path') # Field name made lowercase.
    up_path = models.CharField(max_length=765, db_column='Up_Path') # Field name made lowercase.
    large_text_len = models.IntegerField(db_column='Large_Text_Len') # Field name made lowercase.
    small_text_len = models.IntegerField(db_column='Small_Text_Len') # Field name made lowercase.
    small_image_width = models.IntegerField(db_column='Small_Image_Width') # Field name made lowercase.
    small_image_height = models.IntegerField(db_column='Small_Image_Height') # Field name made lowercase.
    large_image_width = models.IntegerField(db_column='Large_Image_Width') # Field name made lowercase.
    large_image_height = models.IntegerField(db_column='Large_Image_Height') # Field name made lowercase.
    maxsize = models.IntegerField(db_column='MaxSize') # Field name made lowercase.
    max_up_per_day = models.IntegerField(db_column='Max_Up_Per_Day') # Field name made lowercase.
    max_down_per_day = models.IntegerField(db_column='Max_Down_Per_Day') # Field name made lowercase.
    max_down_reg_day = models.IntegerField(db_column='Max_Down_Reg_Day') # Field name made lowercase.
    max_down_file_day = models.IntegerField(db_column='Max_Down_File_Day') # Field name made lowercase.
    count_down = models.IntegerField(db_column='Count_Down') # Field name made lowercase.
    featured_number = models.IntegerField(db_column='Featured_Number') # Field name made lowercase.
    max_up_dir_space = models.IntegerField(db_column='Max_Up_Dir_Space') # Field name made lowercase.
    favourites_max = models.IntegerField(db_column='Favourites_Max') # Field name made lowercase.
    max_thumbnails = models.IntegerField(db_column='Max_Thumbnails') # Field name made lowercase.
    min_comment_length = models.IntegerField(db_column='Min_Comment_length') # Field name made lowercase.
    make_auto_thumbnail = models.IntegerField(db_column='Make_Auto_Thumbnail') # Field name made lowercase.
    default_version = models.CharField(max_length=60, db_column='Default_Version') # Field name made lowercase.
    main_authors = models.TextField(db_column='Main_Authors') # Field name made lowercase.
    author_threshold = models.IntegerField(db_column='Author_Threshold') # Field name made lowercase.
    date_format = models.CharField(max_length=60, db_column='Date_Format') # Field name made lowercase.
    set_date_locale = models.CharField(max_length=60, db_column='Set_date_locale') # Field name made lowercase.
    force_language = models.CharField(max_length=60, db_column='Force_Language') # Field name made lowercase.
    show_all_containers = models.IntegerField(db_column='Show_all_containers') # Field name made lowercase.
    anti_leach = models.IntegerField(db_column='Anti_Leach') # Field name made lowercase.
    allow_up_overwrite = models.IntegerField(db_column='Allow_Up_Overwrite') # Field name made lowercase.
    allow_user_sub = models.IntegerField(db_column='Allow_User_Sub') # Field name made lowercase.
    allow_user_edit = models.IntegerField(db_column='Allow_User_Edit') # Field name made lowercase.
    allow_user_delete = models.IntegerField(db_column='Allow_User_Delete') # Field name made lowercase.
    allow_user_up = models.IntegerField(db_column='Allow_User_Up') # Field name made lowercase.
    enable_admin_autoapp = models.IntegerField(db_column='Enable_Admin_Autoapp') # Field name made lowercase.
    enable_user_autoapp = models.IntegerField(db_column='Enable_User_Autoapp') # Field name made lowercase.
    allow_comments = models.IntegerField(db_column='Allow_Comments') # Field name made lowercase.
    allow_votes = models.IntegerField(db_column='Allow_Votes') # Field name made lowercase.
    allow_large_images = models.IntegerField(db_column='Allow_Large_Images') # Field name made lowercase.
    activate_aec = models.IntegerField(db_column='Activate_AEC') # Field name made lowercase.
    remository_pathway = models.IntegerField(db_column='Remository_Pathway') # Field name made lowercase.
    enable_list_download = models.IntegerField(db_column='Enable_List_Download') # Field name made lowercase.
    audio_download = models.IntegerField(db_column='Audio_Download') # Field name made lowercase.
    video_download = models.IntegerField(db_column='Video_Download') # Field name made lowercase.
    user_remote_files = models.IntegerField(db_column='User_Remote_Files') # Field name made lowercase.
    see_containers_no_download = models.IntegerField(db_column='See_Containers_no_download') # Field name made lowercase.
    see_files_no_download = models.IntegerField(db_column='See_Files_no_download') # Field name made lowercase.
    show_rss_feeds = models.IntegerField(db_column='Show_RSS_feeds') # Field name made lowercase.
    allow_file_info = models.IntegerField(db_column='Allow_File_Info') # Field name made lowercase.
    show_footer = models.IntegerField(db_column='Show_Footer') # Field name made lowercase.
    show_file_folder_counts = models.IntegerField(db_column='Show_File_Folder_Counts') # Field name made lowercase.
    send_sub_mail = models.IntegerField(db_column='Send_Sub_Mail') # Field name made lowercase.
    sub_mail_alt_addr = models.CharField(max_length=765, db_column='Sub_Mail_Alt_Addr') # Field name made lowercase.
    sub_mail_alt_name = models.CharField(max_length=300, db_column='Sub_Mail_Alt_Name') # Field name made lowercase.
    time_stamp = models.CharField(max_length=45, db_column='Time_Stamp') # Field name made lowercase.
    profile_uri = models.CharField(max_length=765, db_column='Profile_URI') # Field name made lowercase.
    download_text = models.TextField()
    preamble = models.TextField()
    default_licence = models.TextField(db_column='Default_Licence') # Field name made lowercase.
    customizer = models.TextField()
    custom_names = models.TextField()
    class Meta:
        db_table = u'jos_downloads_repository'

class JosDownloadsReviews(models.Model):
    id = models.IntegerField(unique=True)
    sequence = models.IntegerField()
    windowtitle = models.CharField(max_length=765)
    keywords = models.CharField(max_length=765)
    component = models.CharField(max_length=765)
    itemid = models.IntegerField()
    userid = models.IntegerField()
    userurl = models.CharField(max_length=765, db_column='userURL') # Field name made lowercase.
    title = models.CharField(max_length=765)
    comment = models.TextField()
    fullreview = models.TextField()
    date = models.DateTimeField()
    class Meta:
        db_table = u'jos_downloads_reviews'

class JosDownloadsStructure(models.Model):
    id = models.IntegerField(unique=True)
    container = models.IntegerField()
    item = models.IntegerField()
    class Meta:
        db_table = u'jos_downloads_structure'

class JosDownloadsText(models.Model):
    id = models.IntegerField(unique=True)
    fileid = models.IntegerField()
    filetext = models.TextField()
    class Meta:
        db_table = u'jos_downloads_text'

class JosEasycaptchas(models.Model):
    id = models.IntegerField(primary_key=True)
    name = models.CharField(max_length=210)
    description = models.TextField(blank=True)
    published = models.IntegerField()
    params = models.TextField(blank=True)
    class Meta:
        db_table = u'jos_easycaptchas'

class JosEasycaptchasDpaulus(models.Model):
    codeid = models.CharField(max_length=18, primary_key=True, db_column='CodeID') # Field name made lowercase.
    codemd5 = models.CharField(max_length=96, db_column='CodeMD5') # Field name made lowercase.
    codedate = models.DecimalField(max_digits=15, decimal_places=0)
    class Meta:
        db_table = u'jos_easycaptchas_dpaulus'

class JosEasycaptchasSecimg(models.Model):
    codeid = models.CharField(max_length=18, primary_key=True, db_column='CodeID') # Field name made lowercase.
    imageid = models.CharField(max_length=96, db_column='ImageID') # Field name made lowercase.
    codedate = models.DecimalField(max_digits=15, decimal_places=0)
    class Meta:
        db_table = u'jos_easycaptchas_secimg'

class JosEasydownload(models.Model):
    id = models.IntegerField(primary_key=True)
    category_id = models.IntegerField()
    name = models.CharField(max_length=765)
    description = models.TextField()
    file_path = models.CharField(max_length=765)
    file_type = models.CharField(max_length=765)
    file_size = models.CharField(max_length=765)
    file_url = models.CharField(max_length=765)
    file_md5 = models.CharField(max_length=765)
    file_crc = models.CharField(max_length=765)
    created = models.DateTimeField()
    created_by = models.IntegerField()
    modified = models.DateTimeField()
    modified_by = models.IntegerField()
    hits = models.IntegerField()
    license_id = models.IntegerField()
    license_show = models.IntegerField()
    ordering = models.IntegerField()
    approved = models.IntegerField()
    state = models.IntegerField()
    class Meta:
        db_table = u'jos_easydownload'

class JosEasydownloadCategories(models.Model):
    id = models.IntegerField(primary_key=True)
    parent_id = models.IntegerField()
    name = models.CharField(max_length=765)
    description = models.TextField()
    ordering = models.IntegerField()
    state = models.IntegerField()
    class Meta:
        db_table = u'jos_easydownload_categories'

class JosEasydownloadLicenses(models.Model):
    id = models.IntegerField(primary_key=True)
    name = models.CharField(max_length=765)
    content = models.TextField()
    state = models.IntegerField()
    class Meta:
        db_table = u'jos_easydownload_licenses'

class JosEasyfaq(models.Model):
    id = models.IntegerField(primary_key=True)
    category_id = models.IntegerField()
    name = models.CharField(max_length=765)
    intro_text = models.TextField()
    main_text = models.TextField()
    created = models.DateTimeField()
    created_by = models.IntegerField()
    modified = models.DateTimeField()
    modified_by = models.IntegerField()
    hits = models.IntegerField()
    ordering = models.IntegerField()
    state = models.IntegerField()
    class Meta:
        db_table = u'jos_easyfaq'

class JosEasyfaqCategories(models.Model):
    id = models.IntegerField(primary_key=True)
    parent_id = models.IntegerField()
    name = models.CharField(max_length=765)
    description = models.TextField()
    ordering = models.IntegerField()
    state = models.IntegerField()
    class Meta:
        db_table = u'jos_easyfaq_categories'

class JosEasyfaqLinkFt(models.Model):
    faq_id = models.IntegerField(primary_key=True)
    tag_id = models.IntegerField(primary_key=True)
    class Meta:
        db_table = u'jos_easyfaq_link_ft'

class JosEasyfaqRating(models.Model):
    id = models.IntegerField(primary_key=True)
    faq_id = models.IntegerField()
    ip = models.CharField(max_length=45)
    rating = models.IntegerField()
    class Meta:
        db_table = u'jos_easyfaq_rating'

class JosEasyfaqTags(models.Model):
    id = models.IntegerField(primary_key=True)
    name = models.CharField(max_length=765)
    state = models.IntegerField()
    class Meta:
        db_table = u'jos_easyfaq_tags'

class JosFabrikAbsolventi(models.Model):
    id = models.IntegerField(primary_key=True)
    date_time = models.DateTimeField(null=True, blank=True)
    priezvisko = models.TextField(blank=True)
    pohlavie = models.TextField(blank=True)
    absolvoval_som = models.TextField(blank=True)
    rok_absolvovania = models.TextField(db_column='Rok_absolvovania', blank=True) # Field name made lowercase.
    dlzka_trasy = models.TextField(blank=True)
    text = models.TextField(db_column='Text', blank=True) # Field name made lowercase.
    captcha = models.CharField(max_length=765, blank=True)
    meno = models.TextField(blank=True)
    email = models.TextField(blank=True)
    nick = models.TextField(db_column='Nick', blank=True) # Field name made lowercase.
    cast = models.TextField(blank=True)
    class Meta:
        db_table = u'jos_fabrik_absolventi'

class JosFabrikAkcie(models.Model):
    id = models.IntegerField(primary_key=True)
    date_time = models.DateTimeField(null=True, blank=True)
    akciu_pridal = models.TextField(db_column='Akciu_pridal', blank=True) # Field name made lowercase.
    kedy = models.DateTimeField(null=True, db_column='Kedy', blank=True) # Field name made lowercase.
    kde = models.TextField(db_column='Kde', blank=True) # Field name made lowercase.
    koniec_akcie = models.DateTimeField(null=True, db_column='Koniec_akcie', blank=True) # Field name made lowercase.
    popis = models.TextField(db_column='Popis', blank=True) # Field name made lowercase.
    poloha_sirka = models.TextField(db_column='Poloha_sirka', blank=True) # Field name made lowercase.
    poloha_dlzka = models.TextField(db_column='Poloha_dlzka', blank=True) # Field name made lowercase.
    obrazok = models.TextField(db_column='Obrazok', blank=True) # Field name made lowercase.
    max = models.TextField(db_column='Max', blank=True) # Field name made lowercase.
    suradnice = models.TextField(db_column='Suradnice', blank=True) # Field name made lowercase.
    pokec_suradnice = models.TextField(blank=True)
    text_hore = models.TextField(db_column='Text_hore', blank=True) # Field name made lowercase.
    captcha = models.CharField(max_length=765, db_column='Captcha', blank=True) # Field name made lowercase.
    poznamka_zaciatok = models.TextField(db_column='Poznamka_zaciatok', blank=True) # Field name made lowercase.
    poznamka_koniec = models.TextField(db_column='Poznamka_koniec', blank=True) # Field name made lowercase.
    text_suradnice = models.TextField(blank=True)
    tvoj_email = models.TextField(db_column='Tvoj_email', blank=True) # Field name made lowercase.
    zverejnit_email = models.TextField(db_column='Zverejnit_email', blank=True) # Field name made lowercase.
    nazov_akcie = models.TextField(blank=True)
    class Meta:
        db_table = u'jos_fabrik_akcie'

class JosFabrikCalendarEvents(models.Model):
    id = models.IntegerField(primary_key=True)
    visualization_id = models.IntegerField()
    label = models.CharField(max_length=765)
    location = models.CharField(max_length=765)
    start_date = models.DateTimeField()
    end_date = models.DateTimeField()
    event_type = models.IntegerField()
    all_day = models.IntegerField()
    repeat = models.IntegerField()
    repeat_occurs = models.CharField(max_length=150)
    repeate_every = models.IntegerField()
    repeat_until = models.CharField(max_length=765)
    repeat_occurances = models.IntegerField()
    repeat_until_date = models.DateField()
    event_category = models.IntegerField()
    access = models.IntegerField()
    created_by = models.IntegerField()
    created_by_alias = models.CharField(max_length=450)
    description = models.TextField()
    priority = models.IntegerField()
    status = models.IntegerField()
    url = models.CharField(max_length=765)
    class Meta:
        db_table = u'jos_fabrik_calendar_events'

class JosFabrikConnections(models.Model):
    id = models.IntegerField(primary_key=True)
    host = models.CharField(max_length=765)
    user = models.CharField(max_length=765)
    password = models.CharField(max_length=765)
    database = models.CharField(max_length=765)
    description = models.CharField(max_length=765)
    state = models.IntegerField()
    checked_out = models.IntegerField()
    checked_out_time = models.DateTimeField(null=True, blank=True)
    default = models.IntegerField()
    attribs = models.TextField()
    class Meta:
        db_table = u'jos_fabrik_connections'

class JosFabrikCron(models.Model):
    id = models.IntegerField(primary_key=True)
    label = models.CharField(max_length=300)
    frequency = models.IntegerField()
    unit = models.CharField(max_length=45)
    created = models.DateTimeField()
    created_by = models.IntegerField()
    created_by_alias = models.CharField(max_length=90)
    modified = models.DateTimeField()
    modified_by = models.CharField(max_length=90)
    checked_out = models.IntegerField()
    checked_out_time = models.DateTimeField()
    state = models.IntegerField()
    plugin = models.CharField(max_length=150)
    lastrun = models.DateTimeField()
    attribs = models.TextField()
    class Meta:
        db_table = u'jos_fabrik_cron'

class JosFabrikElements(models.Model):
    id = models.IntegerField(primary_key=True)
    name = models.CharField(max_length=300)
    group_id = models.IntegerField()
    plugin = models.CharField(max_length=300)
    label = models.TextField(blank=True)
    checked_out = models.IntegerField()
    checked_out_time = models.DateTimeField()
    created = models.DateTimeField()
    created_by = models.IntegerField()
    created_by_alias = models.CharField(max_length=300)
    modified = models.DateTimeField()
    modified_by = models.IntegerField()
    width = models.IntegerField()
    height = models.IntegerField()
    default = models.TextField()
    hidden = models.IntegerField()
    eval = models.IntegerField()
    ordering = models.IntegerField()
    show_in_table_summary = models.IntegerField(null=True, blank=True)
    can_order = models.IntegerField(null=True, blank=True)
    filter_type = models.CharField(max_length=60, blank=True)
    filter_exact_match = models.IntegerField(null=True, blank=True)
    state = models.IntegerField()
    button_javascript = models.TextField()
    link_to_detail = models.IntegerField()
    primary_key = models.IntegerField()
    auto_increment = models.IntegerField()
    access = models.IntegerField()
    use_in_page_title = models.IntegerField()
    sub_values = models.TextField()
    sub_labels = models.TextField()
    sub_intial_selection = models.TextField()
    parent_id = models.IntegerField()
    attribs = models.TextField()
    class Meta:
        db_table = u'jos_fabrik_elements'

class JosFabrikFormSessions(models.Model):
    id = models.IntegerField(primary_key=True)
    hash = models.CharField(max_length=765)
    user_id = models.IntegerField()
    form_id = models.IntegerField()
    row_id = models.IntegerField()
    last_page = models.IntegerField()
    referring_url = models.CharField(max_length=765)
    data = models.TextField()
    time_date = models.DateTimeField()
    class Meta:
        db_table = u'jos_fabrik_form_sessions'

class JosFabrikFormgroup(models.Model):
    id = models.IntegerField(primary_key=True)
    form_id = models.IntegerField()
    group_id = models.IntegerField()
    ordering = models.IntegerField()
    class Meta:
        db_table = u'jos_fabrik_formgroup'

class JosFabrikForms(models.Model):
    id = models.IntegerField(primary_key=True)
    label = models.CharField(max_length=765)
    record_in_database = models.IntegerField()
    error = models.CharField(max_length=450)
    intro = models.TextField()
    created = models.DateTimeField()
    created_by = models.IntegerField()
    created_by_alias = models.CharField(max_length=300)
    modified = models.DateTimeField()
    modified_by = models.IntegerField()
    checked_out = models.IntegerField()
    checked_out_time = models.DateTimeField()
    publish_up = models.DateTimeField(null=True, blank=True)
    publish_down = models.DateTimeField(null=True, blank=True)
    reset_button_label = models.CharField(max_length=300)
    submit_button_label = models.CharField(max_length=300)
    form_template = models.CharField(max_length=765, blank=True)
    view_only_template = models.CharField(max_length=765, blank=True)
    state = models.IntegerField()
    private = models.IntegerField()
    attribs = models.TextField()
    class Meta:
        db_table = u'jos_fabrik_forms'

class JosFabrikGroups(models.Model):
    id = models.IntegerField(primary_key=True)
    name = models.CharField(max_length=300)
    css = models.TextField()
    label = models.CharField(max_length=300)
    state = models.IntegerField()
    created = models.DateTimeField()
    created_by = models.IntegerField()
    created_by_alias = models.CharField(max_length=300)
    modified = models.DateTimeField()
    modified_by = models.IntegerField()
    checked_out = models.IntegerField()
    checked_out_time = models.DateTimeField()
    is_join = models.IntegerField()
    private = models.IntegerField()
    attribs = models.TextField()
    class Meta:
        db_table = u'jos_fabrik_groups'

class JosFabrikJoins(models.Model):
    id = models.IntegerField(primary_key=True)
    table_id = models.IntegerField()
    element_id = models.IntegerField()
    join_from_table = models.CharField(max_length=765)
    table_join = models.CharField(max_length=765)
    table_key = models.CharField(max_length=765)
    table_join_key = models.CharField(max_length=765)
    join_type = models.CharField(max_length=765)
    group_id = models.IntegerField()
    attribs = models.TextField()
    class Meta:
        db_table = u'jos_fabrik_joins'

class JosFabrikJsactions(models.Model):
    id = models.IntegerField(primary_key=True)
    element_id = models.IntegerField()
    action = models.CharField(max_length=765)
    code = models.TextField()
    attribs = models.TextField()
    class Meta:
        db_table = u'jos_fabrik_jsactions'

class JosFabrikLog(models.Model):
    id = models.IntegerField(primary_key=True)
    timedate_created = models.DateTimeField()
    referring_url = models.CharField(max_length=765)
    message_type = models.CharField(max_length=180)
    message = models.TextField()
    class Meta:
        db_table = u'jos_fabrik_log'

class JosFabrikPackages(models.Model):
    id = models.IntegerField(primary_key=True)
    label = models.CharField(max_length=765)
    state = models.IntegerField()
    attribs = models.TextField()
    checked_out = models.IntegerField()
    checked_out_time = models.DateTimeField(null=True, blank=True)
    tables = models.TextField()
    created = models.DateTimeField()
    modified = models.DateTimeField()
    modified_by = models.IntegerField()
    template = models.CharField(max_length=765)
    class Meta:
        db_table = u'jos_fabrik_packages'

class JosFabrikPlugins(models.Model):
    id = models.IntegerField(primary_key=True)
    name = models.CharField(max_length=300)
    label = models.CharField(max_length=765)
    type = models.CharField(max_length=300)
    state = models.IntegerField(null=True, blank=True)
    iscore = models.IntegerField(null=True, blank=True)
    checked_out = models.CharField(max_length=18)
    checked_out_time = models.DateTimeField(null=True, blank=True)
    params = models.TextField(blank=True)
    class Meta:
        db_table = u'jos_fabrik_plugins'

class JosFabrikPridajClanok(models.Model):
    id = models.IntegerField(primary_key=True)
    date_time = models.DateTimeField(null=True, blank=True)
    hlavna_fotografia = models.TextField(db_column='Hlavna_Fotografia', blank=True) # Field name made lowercase.
    1_fotografia = models.TextField(blank=True)
    2_fotografia = models.TextField(blank=True)
    popis_fotografie_hf = models.TextField(db_column='Popis_fotografie_HF', blank=True) # Field name made lowercase.
    popis_fotografie_1 = models.TextField(db_column='Popis_fotografie_1', blank=True) # Field name made lowercase.
    popis_fotografie_2 = models.TextField(db_column='Popis_fotografie_2', blank=True) # Field name made lowercase.
    description = models.TextField(blank=True)
    uzivatel = models.IntegerField(null=True, db_column='Uzivatel', blank=True) # Field name made lowercase.
    nazov_clanku = models.TextField(db_column='Nazov_clanku', blank=True) # Field name made lowercase.
    text = models.TextField(db_column='Text', blank=True) # Field name made lowercase.
    sekcia = models.CharField(max_length=765, db_column='Sekcia', blank=True) # Field name made lowercase.
    subor_clanku = models.TextField(db_column='Subor_clanku', blank=True) # Field name made lowercase.
    3_fotografia = models.TextField(blank=True)
    4_fotografia = models.TextField(blank=True)
    5_fotografia = models.TextField(blank=True)
    6_fotografia = models.TextField(blank=True)
    7_fotografia = models.TextField(blank=True)
    8_fotografia = models.TextField(blank=True)
    popis_fotografie_3 = models.TextField(db_column='Popis_fotografie_3', blank=True) # Field name made lowercase.
    popis_fotografie_4 = models.TextField(db_column='Popis_fotografie_4', blank=True) # Field name made lowercase.
    popis_fotografie_5 = models.TextField(db_column='Popis_fotografie_5', blank=True) # Field name made lowercase.
    popis_fotografie_6 = models.TextField(db_column='Popis_fotografie_6', blank=True) # Field name made lowercase.
    popis_fotografie_7 = models.TextField(db_column='Popis_fotografie_7', blank=True) # Field name made lowercase.
    popis_fotografie_8 = models.TextField(db_column='Popis_fotografie_8', blank=True) # Field name made lowercase.
    text_koniec = models.TextField(db_column='Text_koniec', blank=True) # Field name made lowercase.
    email = models.TextField(blank=True)
    podmienky = models.TextField(db_column='Podmienky', blank=True) # Field name made lowercase.
    class Meta:
        db_table = u'jos_fabrik_pridaj_clanok'

class JosFabrikTables(models.Model):
    id = models.IntegerField(primary_key=True)
    label = models.CharField(max_length=765)
    introduction = models.TextField()
    form_id = models.IntegerField()
    db_table_name = models.CharField(max_length=765)
    db_primary_key = models.CharField(max_length=765)
    auto_inc = models.IntegerField()
    connection_id = models.IntegerField()
    created = models.DateTimeField(null=True, blank=True)
    created_by = models.IntegerField()
    created_by_alias = models.CharField(max_length=765)
    modified = models.DateTimeField(null=True, blank=True)
    modified_by = models.IntegerField()
    checked_out = models.IntegerField()
    checked_out_time = models.DateTimeField(null=True, blank=True)
    state = models.IntegerField()
    publish_up = models.DateTimeField(null=True, blank=True)
    publish_down = models.DateTimeField(null=True, blank=True)
    access = models.IntegerField()
    hits = models.IntegerField()
    rows_per_page = models.IntegerField()
    template = models.CharField(max_length=765)
    order_by = models.CharField(max_length=765)
    order_dir = models.CharField(max_length=765)
    filter_action = models.CharField(max_length=90)
    group_by = models.CharField(max_length=765)
    private = models.IntegerField()
    attribs = models.TextField()
    class Meta:
        db_table = u'jos_fabrik_tables'

class JosFabrikValidations(models.Model):
    id = models.IntegerField(primary_key=True)
    element_id = models.IntegerField()
    validation_plugin = models.CharField(max_length=300)
    message = models.CharField(max_length=765, blank=True)
    clent_side_validation = models.IntegerField()
    checked_out = models.IntegerField()
    checked_out_time = models.DateTimeField(null=True, blank=True)
    attribs = models.TextField()
    class Meta:
        db_table = u'jos_fabrik_validations'

class JosFabrikVisualizations(models.Model):
    id = models.IntegerField(primary_key=True)
    plugin = models.CharField(max_length=300)
    label = models.CharField(max_length=765)
    intro_text = models.TextField()
    created = models.DateTimeField()
    created_by = models.IntegerField()
    created_by_alias = models.CharField(max_length=300)
    modified = models.DateTimeField()
    modified_by = models.IntegerField()
    checked_out = models.IntegerField()
    checked_out_time = models.DateTimeField()
    publish_up = models.DateTimeField()
    publish_down = models.DateTimeField()
    state = models.IntegerField()
    attribs = models.TextField()
    class Meta:
        db_table = u'jos_fabrik_visualizations'

class JosFbAnnouncement(models.Model):
    id = models.IntegerField(primary_key=True)
    title = models.TextField()
    sdescription = models.TextField()
    description = models.TextField()
    created = models.DateTimeField()
    published = models.IntegerField()
    ordering = models.IntegerField()
    showdate = models.IntegerField()
    class Meta:
        db_table = u'jos_fb_announcement'

class JosFbAttachments(models.Model):
    mesid = models.IntegerField()
    filelocation = models.TextField()
    class Meta:
        db_table = u'jos_fb_attachments'

class JosFbCategories(models.Model):
    id = models.IntegerField()
    parent = models.IntegerField(null=True, blank=True)
    name = models.TextField(blank=True)
    cat_emoticon = models.IntegerField()
    locked = models.IntegerField()
    alert_admin = models.IntegerField()
    moderated = models.IntegerField()
    moderators = models.CharField(max_length=45, blank=True)
    pub_access = models.IntegerField(null=True, blank=True)
    pub_recurse = models.IntegerField(null=True, blank=True)
    admin_access = models.IntegerField(null=True, blank=True)
    admin_recurse = models.IntegerField(null=True, blank=True)
    ordering = models.IntegerField()
    future2 = models.IntegerField(null=True, blank=True)
    published = models.IntegerField()
    checked_out = models.IntegerField()
    checked_out_time = models.DateTimeField()
    review = models.IntegerField()
    hits = models.IntegerField()
    description = models.TextField()
    headerdesc = models.TextField()
    class_sfx = models.CharField(max_length=60)
    id_last_msg = models.IntegerField()
    numtopics = models.IntegerField(db_column='numTopics') # Field name made lowercase.
    numposts = models.IntegerField(db_column='numPosts') # Field name made lowercase.
    time_last_msg = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'jos_fb_categories'

class JosFbConfig(models.Model):
    id = models.IntegerField(primary_key=True)
    board_title = models.TextField(blank=True)
    email = models.TextField(blank=True)
    board_offline = models.IntegerField(null=True, blank=True)
    board_ofset = models.TextField(blank=True)
    offline_message = models.TextField(blank=True)
    default_view = models.TextField(blank=True)
    enablerss = models.IntegerField(null=True, blank=True)
    enablepdf = models.IntegerField(null=True, blank=True)
    threads_per_page = models.IntegerField(null=True, blank=True)
    messages_per_page = models.IntegerField(null=True, blank=True)
    messages_per_page_search = models.IntegerField(null=True, blank=True)
    showhistory = models.IntegerField(null=True, blank=True)
    historylimit = models.IntegerField(null=True, blank=True)
    shownew = models.IntegerField(null=True, blank=True)
    newchar = models.TextField(blank=True)
    jmambot = models.IntegerField(null=True, blank=True)
    disemoticons = models.IntegerField(null=True, blank=True)
    template = models.TextField(blank=True)
    templateimagepath = models.TextField(blank=True)
    joomlastyle = models.IntegerField(null=True, blank=True)
    showannouncement = models.IntegerField(null=True, blank=True)
    avataroncat = models.IntegerField(null=True, blank=True)
    catimagepath = models.TextField(blank=True)
    numchildcolumn = models.IntegerField(null=True, blank=True)
    showchildcaticon = models.IntegerField(null=True, blank=True)
    annmodid = models.TextField(blank=True)
    rtewidth = models.IntegerField(null=True, blank=True)
    rteheight = models.IntegerField(null=True, blank=True)
    enablerulespage = models.IntegerField(null=True, blank=True)
    enableforumjump = models.IntegerField(null=True, blank=True)
    reportmsg = models.IntegerField(null=True, blank=True)
    username = models.IntegerField(null=True, blank=True)
    askemail = models.IntegerField(null=True, blank=True)
    showemail = models.IntegerField(null=True, blank=True)
    showuserstats = models.IntegerField(null=True, blank=True)
    poststats = models.IntegerField(null=True, blank=True)
    statscolor = models.IntegerField(null=True, blank=True)
    showkarma = models.IntegerField(null=True, blank=True)
    useredit = models.IntegerField(null=True, blank=True)
    useredittime = models.IntegerField(null=True, blank=True)
    useredittimegrace = models.IntegerField(null=True, blank=True)
    editmarkup = models.IntegerField(null=True, blank=True)
    allowsubscriptions = models.IntegerField(null=True, blank=True)
    subscriptionschecked = models.IntegerField(null=True, blank=True)
    allowfavorites = models.IntegerField(null=True, blank=True)
    wrap = models.IntegerField(null=True, blank=True)
    maxsubject = models.IntegerField(null=True, blank=True)
    maxsig = models.IntegerField(null=True, blank=True)
    regonly = models.IntegerField(null=True, blank=True)
    changename = models.IntegerField(null=True, blank=True)
    pubwrite = models.IntegerField(null=True, blank=True)
    floodprotection = models.IntegerField(null=True, blank=True)
    mailmod = models.IntegerField(null=True, blank=True)
    mailadmin = models.IntegerField(null=True, blank=True)
    captcha = models.IntegerField(null=True, blank=True)
    mailfull = models.IntegerField(null=True, blank=True)
    allowavatar = models.IntegerField(null=True, blank=True)
    allowavatarupload = models.IntegerField(null=True, blank=True)
    allowavatargallery = models.IntegerField(null=True, blank=True)
    imageprocessor = models.TextField(blank=True)
    avatarsmallheight = models.IntegerField(null=True, blank=True)
    avatarsmallwidth = models.IntegerField(null=True, blank=True)
    avatarheight = models.IntegerField(null=True, blank=True)
    avatarwidth = models.IntegerField(null=True, blank=True)
    avatarlargeheight = models.IntegerField(null=True, blank=True)
    avatarlargewidth = models.IntegerField(null=True, blank=True)
    avatarquality = models.IntegerField(null=True, blank=True)
    avatarsize = models.IntegerField(null=True, blank=True)
    allowimageupload = models.IntegerField(null=True, blank=True)
    allowimageregupload = models.IntegerField(null=True, blank=True)
    imageheight = models.IntegerField(null=True, blank=True)
    imagewidth = models.IntegerField(null=True, blank=True)
    imagesize = models.IntegerField(null=True, blank=True)
    allowfileupload = models.IntegerField(null=True, blank=True)
    allowfileregupload = models.IntegerField(null=True, blank=True)
    filetypes = models.TextField(blank=True)
    filesize = models.IntegerField(null=True, blank=True)
    showranking = models.IntegerField(null=True, blank=True)
    rankimages = models.IntegerField(null=True, blank=True)
    avatar_src = models.TextField(blank=True)
    fb_profile = models.TextField(blank=True)
    pm_component = models.TextField(blank=True)
    cb_profile = models.IntegerField(null=True, blank=True)
    discussbot = models.IntegerField(null=True, blank=True)
    userlist_rows = models.IntegerField(null=True, blank=True)
    userlist_online = models.IntegerField(null=True, blank=True)
    userlist_avatar = models.IntegerField(null=True, blank=True)
    userlist_name = models.IntegerField(null=True, blank=True)
    userlist_username = models.IntegerField(null=True, blank=True)
    userlist_group = models.IntegerField(null=True, blank=True)
    userlist_posts = models.IntegerField(null=True, blank=True)
    userlist_karma = models.IntegerField(null=True, blank=True)
    userlist_email = models.IntegerField(null=True, blank=True)
    userlist_usertype = models.IntegerField(null=True, blank=True)
    userlist_joindate = models.IntegerField(null=True, blank=True)
    userlist_lastvisitdate = models.IntegerField(null=True, blank=True)
    userlist_userhits = models.IntegerField(null=True, blank=True)
    showlatest = models.IntegerField(null=True, blank=True)
    latestcount = models.IntegerField(null=True, blank=True)
    latestcountperpage = models.IntegerField(null=True, blank=True)
    latestcategory = models.TextField(blank=True)
    latestsinglesubject = models.IntegerField(null=True, blank=True)
    latestreplysubject = models.IntegerField(null=True, blank=True)
    latestsubjectlength = models.IntegerField(null=True, blank=True)
    latestshowdate = models.IntegerField(null=True, blank=True)
    latestshowhits = models.IntegerField(null=True, blank=True)
    latestshowauthor = models.IntegerField(null=True, blank=True)
    showstats = models.IntegerField(null=True, blank=True)
    showwhoisonline = models.IntegerField(null=True, blank=True)
    showgenstats = models.IntegerField(null=True, blank=True)
    showpopuserstats = models.IntegerField(null=True, blank=True)
    popusercount = models.IntegerField(null=True, blank=True)
    showpopsubjectstats = models.IntegerField(null=True, blank=True)
    popsubjectcount = models.IntegerField(null=True, blank=True)
    usernamechange = models.IntegerField(null=True, blank=True)
    rules_infb = models.IntegerField(null=True, blank=True)
    rules_cid = models.IntegerField(null=True, blank=True)
    rules_link = models.TextField(blank=True)
    enablehelppage = models.IntegerField(null=True, blank=True)
    help_infb = models.IntegerField(null=True, blank=True)
    help_cid = models.IntegerField(null=True, blank=True)
    help_link = models.TextField(blank=True)
    showspoilertag = models.IntegerField(null=True, blank=True)
    showvideotag = models.IntegerField(null=True, blank=True)
    showebaytag = models.IntegerField(null=True, blank=True)
    trimlongurls = models.IntegerField(null=True, blank=True)
    trimlongurlsfront = models.IntegerField(null=True, blank=True)
    trimlongurlsback = models.IntegerField(null=True, blank=True)
    autoembedyoutube = models.IntegerField(null=True, blank=True)
    autoembedebay = models.IntegerField(null=True, blank=True)
    ebaylanguagecode = models.TextField(blank=True)
    fbsessiontimeout = models.IntegerField(null=True, blank=True)
    highlightcode = models.IntegerField(null=True, blank=True)
    rsstype = models.TextField(blank=True)
    rsshistory = models.TextField(blank=True)
    fbdefaultpage = models.TextField(blank=True)
    default_sort = models.TextField(blank=True)
    alphauserpoints = models.IntegerField(null=True, blank=True)
    alphauserpointsrules = models.IntegerField(null=True, blank=True)
    alphauserpointsnumchars = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'jos_fb_config'

class JosFbConfigBackup(models.Model):
    id = models.IntegerField()
    board_title = models.TextField(blank=True)
    email = models.TextField(blank=True)
    board_offline = models.IntegerField(null=True, blank=True)
    board_ofset = models.TextField(blank=True)
    offline_message = models.TextField(blank=True)
    default_view = models.TextField(blank=True)
    enablerss = models.IntegerField(null=True, blank=True)
    enablepdf = models.IntegerField(null=True, blank=True)
    threads_per_page = models.IntegerField(null=True, blank=True)
    messages_per_page = models.IntegerField(null=True, blank=True)
    messages_per_page_search = models.IntegerField(null=True, blank=True)
    showhistory = models.IntegerField(null=True, blank=True)
    historylimit = models.IntegerField(null=True, blank=True)
    shownew = models.IntegerField(null=True, blank=True)
    newchar = models.TextField(blank=True)
    jmambot = models.IntegerField(null=True, blank=True)
    disemoticons = models.IntegerField(null=True, blank=True)
    template = models.TextField(blank=True)
    templateimagepath = models.TextField(blank=True)
    joomlastyle = models.IntegerField(null=True, blank=True)
    showannouncement = models.IntegerField(null=True, blank=True)
    avataroncat = models.IntegerField(null=True, blank=True)
    catimagepath = models.TextField(blank=True)
    numchildcolumn = models.IntegerField(null=True, blank=True)
    showchildcaticon = models.IntegerField(null=True, blank=True)
    annmodid = models.TextField(blank=True)
    rtewidth = models.IntegerField(null=True, blank=True)
    rteheight = models.IntegerField(null=True, blank=True)
    enablerulespage = models.IntegerField(null=True, blank=True)
    enableforumjump = models.IntegerField(null=True, blank=True)
    reportmsg = models.IntegerField(null=True, blank=True)
    username = models.IntegerField(null=True, blank=True)
    askemail = models.IntegerField(null=True, blank=True)
    showemail = models.IntegerField(null=True, blank=True)
    showuserstats = models.IntegerField(null=True, blank=True)
    poststats = models.IntegerField(null=True, blank=True)
    statscolor = models.IntegerField(null=True, blank=True)
    showkarma = models.IntegerField(null=True, blank=True)
    useredit = models.IntegerField(null=True, blank=True)
    useredittime = models.IntegerField(null=True, blank=True)
    useredittimegrace = models.IntegerField(null=True, blank=True)
    editmarkup = models.IntegerField(null=True, blank=True)
    allowsubscriptions = models.IntegerField(null=True, blank=True)
    subscriptionschecked = models.IntegerField(null=True, blank=True)
    allowfavorites = models.IntegerField(null=True, blank=True)
    wrap = models.IntegerField(null=True, blank=True)
    maxsubject = models.IntegerField(null=True, blank=True)
    maxsig = models.IntegerField(null=True, blank=True)
    regonly = models.IntegerField(null=True, blank=True)
    changename = models.IntegerField(null=True, blank=True)
    pubwrite = models.IntegerField(null=True, blank=True)
    floodprotection = models.IntegerField(null=True, blank=True)
    mailmod = models.IntegerField(null=True, blank=True)
    mailadmin = models.IntegerField(null=True, blank=True)
    captcha = models.IntegerField(null=True, blank=True)
    mailfull = models.IntegerField(null=True, blank=True)
    allowavatar = models.IntegerField(null=True, blank=True)
    allowavatarupload = models.IntegerField(null=True, blank=True)
    allowavatargallery = models.IntegerField(null=True, blank=True)
    imageprocessor = models.TextField(blank=True)
    avatarsmallheight = models.IntegerField(null=True, blank=True)
    avatarsmallwidth = models.IntegerField(null=True, blank=True)
    avatarheight = models.IntegerField(null=True, blank=True)
    avatarwidth = models.IntegerField(null=True, blank=True)
    avatarlargeheight = models.IntegerField(null=True, blank=True)
    avatarlargewidth = models.IntegerField(null=True, blank=True)
    avatarquality = models.IntegerField(null=True, blank=True)
    avatarsize = models.IntegerField(null=True, blank=True)
    allowimageupload = models.IntegerField(null=True, blank=True)
    allowimageregupload = models.IntegerField(null=True, blank=True)
    imageheight = models.IntegerField(null=True, blank=True)
    imagewidth = models.IntegerField(null=True, blank=True)
    imagesize = models.IntegerField(null=True, blank=True)
    allowfileupload = models.IntegerField(null=True, blank=True)
    allowfileregupload = models.IntegerField(null=True, blank=True)
    filetypes = models.TextField(blank=True)
    filesize = models.IntegerField(null=True, blank=True)
    showranking = models.IntegerField(null=True, blank=True)
    rankimages = models.IntegerField(null=True, blank=True)
    avatar_src = models.TextField(blank=True)
    fb_profile = models.TextField(blank=True)
    pm_component = models.TextField(blank=True)
    cb_profile = models.IntegerField(null=True, blank=True)
    discussbot = models.IntegerField(null=True, blank=True)
    userlist_rows = models.IntegerField(null=True, blank=True)
    userlist_online = models.IntegerField(null=True, blank=True)
    userlist_avatar = models.IntegerField(null=True, blank=True)
    userlist_name = models.IntegerField(null=True, blank=True)
    userlist_username = models.IntegerField(null=True, blank=True)
    userlist_group = models.IntegerField(null=True, blank=True)
    userlist_posts = models.IntegerField(null=True, blank=True)
    userlist_karma = models.IntegerField(null=True, blank=True)
    userlist_email = models.IntegerField(null=True, blank=True)
    userlist_usertype = models.IntegerField(null=True, blank=True)
    userlist_joindate = models.IntegerField(null=True, blank=True)
    userlist_lastvisitdate = models.IntegerField(null=True, blank=True)
    userlist_userhits = models.IntegerField(null=True, blank=True)
    showlatest = models.IntegerField(null=True, blank=True)
    latestcount = models.IntegerField(null=True, blank=True)
    latestcountperpage = models.IntegerField(null=True, blank=True)
    latestcategory = models.TextField(blank=True)
    latestsinglesubject = models.IntegerField(null=True, blank=True)
    latestreplysubject = models.IntegerField(null=True, blank=True)
    latestsubjectlength = models.IntegerField(null=True, blank=True)
    latestshowdate = models.IntegerField(null=True, blank=True)
    latestshowhits = models.IntegerField(null=True, blank=True)
    latestshowauthor = models.IntegerField(null=True, blank=True)
    showstats = models.IntegerField(null=True, blank=True)
    showwhoisonline = models.IntegerField(null=True, blank=True)
    showgenstats = models.IntegerField(null=True, blank=True)
    showpopuserstats = models.IntegerField(null=True, blank=True)
    popusercount = models.IntegerField(null=True, blank=True)
    showpopsubjectstats = models.IntegerField(null=True, blank=True)
    popsubjectcount = models.IntegerField(null=True, blank=True)
    usernamechange = models.IntegerField(null=True, blank=True)
    rules_infb = models.IntegerField(null=True, blank=True)
    rules_cid = models.IntegerField(null=True, blank=True)
    rules_link = models.TextField(blank=True)
    enablehelppage = models.IntegerField(null=True, blank=True)
    help_infb = models.IntegerField(null=True, blank=True)
    help_cid = models.IntegerField(null=True, blank=True)
    help_link = models.TextField(blank=True)
    showspoilertag = models.IntegerField(null=True, blank=True)
    showvideotag = models.IntegerField(null=True, blank=True)
    showebaytag = models.IntegerField(null=True, blank=True)
    trimlongurls = models.IntegerField(null=True, blank=True)
    trimlongurlsfront = models.IntegerField(null=True, blank=True)
    trimlongurlsback = models.IntegerField(null=True, blank=True)
    autoembedyoutube = models.IntegerField(null=True, blank=True)
    autoembedebay = models.IntegerField(null=True, blank=True)
    ebaylanguagecode = models.TextField(blank=True)
    fbsessiontimeout = models.IntegerField(null=True, blank=True)
    highlightcode = models.IntegerField(null=True, blank=True)
    rsstype = models.TextField(blank=True)
    rsshistory = models.TextField(blank=True)
    fbdefaultpage = models.TextField(blank=True)
    default_sort = models.TextField(blank=True)
    alphauserpoints = models.IntegerField(null=True, blank=True)
    alphauserpointsrules = models.IntegerField(null=True, blank=True)
    alphauserpointsnumchars = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'jos_fb_config_backup'

class JosFbFavorites(models.Model):
    thread = models.IntegerField(unique=True)
    userid = models.IntegerField()
    class Meta:
        db_table = u'jos_fb_favorites'

class JosFbGroups(models.Model):
    id = models.IntegerField(primary_key=True)
    title = models.CharField(max_length=765, blank=True)
    class Meta:
        db_table = u'jos_fb_groups'

class JosFbMessages(models.Model):
    id = models.IntegerField(primary_key=True)
    parent = models.IntegerField(null=True, blank=True)
    thread = models.IntegerField(null=True, blank=True)
    catid = models.IntegerField()
    name = models.TextField(blank=True)
    userid = models.IntegerField()
    email = models.TextField(blank=True)
    subject = models.TextField(blank=True)
    time = models.IntegerField()
    ip = models.CharField(max_length=45, blank=True)
    topic_emoticon = models.IntegerField()
    locked = models.IntegerField()
    hold = models.IntegerField()
    ordering = models.IntegerField(null=True, blank=True)
    hits = models.IntegerField(null=True, blank=True)
    moved = models.IntegerField(null=True, blank=True)
    modified_by = models.IntegerField(null=True, blank=True)
    modified_time = models.IntegerField(null=True, blank=True)
    modified_reason = models.TextField(blank=True)
    class Meta:
        db_table = u'jos_fb_messages'

class JosFbMessagesText(models.Model):
    mesid = models.IntegerField(primary_key=True)
    message = models.TextField()
    class Meta:
        db_table = u'jos_fb_messages_text'

class JosFbModeration(models.Model):
    catid = models.IntegerField(primary_key=True)
    userid = models.IntegerField(primary_key=True)
    future1 = models.IntegerField(null=True, blank=True)
    future2 = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'jos_fb_moderation'

class JosFbRanks(models.Model):
    rank_id = models.IntegerField(primary_key=True)
    rank_title = models.CharField(max_length=765)
    rank_min = models.IntegerField()
    rank_special = models.IntegerField()
    rank_image = models.CharField(max_length=765)
    class Meta:
        db_table = u'jos_fb_ranks'

class JosFbSessions(models.Model):
    userid = models.IntegerField(primary_key=True)
    allowed = models.TextField(blank=True)
    lasttime = models.IntegerField()
    readtopics = models.TextField(blank=True)
    currvisit = models.IntegerField()
    class Meta:
        db_table = u'jos_fb_sessions'

class JosFbSmileys(models.Model):
    id = models.IntegerField(primary_key=True)
    code = models.CharField(max_length=36)
    location = models.CharField(max_length=150)
    greylocation = models.CharField(max_length=180)
    emoticonbar = models.IntegerField()
    class Meta:
        db_table = u'jos_fb_smileys'

class JosFbSubscriptions(models.Model):
    thread = models.IntegerField(unique=True)
    userid = models.IntegerField()
    future1 = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'jos_fb_subscriptions'

class JosFbUsers(models.Model):
    userid = models.IntegerField(primary_key=True)
    view = models.CharField(max_length=24)
    signature = models.TextField(blank=True)
    moderator = models.IntegerField(null=True, blank=True)
    ordering = models.IntegerField(null=True, blank=True)
    posts = models.IntegerField(null=True, blank=True)
    avatar = models.CharField(max_length=150, blank=True)
    karma = models.IntegerField(null=True, blank=True)
    karma_time = models.IntegerField(null=True, blank=True)
    group_id = models.IntegerField(null=True, blank=True)
    uhits = models.IntegerField(null=True, blank=True)
    personaltext = models.TextField(db_column='personalText', blank=True) # Field name made lowercase.
    gender = models.IntegerField()
    birthdate = models.DateField()
    location = models.CharField(max_length=150, blank=True)
    icq = models.CharField(max_length=150, db_column='ICQ', blank=True) # Field name made lowercase.
    aim = models.CharField(max_length=150, db_column='AIM', blank=True) # Field name made lowercase.
    yim = models.CharField(max_length=150, db_column='YIM', blank=True) # Field name made lowercase.
    msn = models.CharField(max_length=150, db_column='MSN', blank=True) # Field name made lowercase.
    skype = models.CharField(max_length=150, db_column='SKYPE', blank=True) # Field name made lowercase.
    gtalk = models.CharField(max_length=150, db_column='GTALK', blank=True) # Field name made lowercase.
    websitename = models.CharField(max_length=150, blank=True)
    websiteurl = models.CharField(max_length=150, blank=True)
    rank = models.IntegerField()
    hideemail = models.IntegerField(db_column='hideEmail') # Field name made lowercase.
    showonline = models.IntegerField(db_column='showOnline') # Field name made lowercase.
    class Meta:
        db_table = u'jos_fb_users'

class JosFbVersion(models.Model):
    id = models.IntegerField(primary_key=True)
    version = models.CharField(max_length=60)
    versiondate = models.DateField()
    installdate = models.DateField()
    build = models.CharField(max_length=60)
    versionname = models.CharField(max_length=120, blank=True)
    class Meta:
        db_table = u'jos_fb_version'

class JosFbWhoisonline(models.Model):
    id = models.IntegerField(primary_key=True)
    userid = models.IntegerField()
    time = models.CharField(max_length=42)
    item = models.IntegerField(null=True, blank=True)
    what = models.CharField(max_length=765, blank=True)
    func = models.CharField(max_length=150, blank=True)
    do = models.CharField(max_length=150, blank=True)
    task = models.CharField(max_length=150, blank=True)
    link = models.TextField(blank=True)
    userip = models.CharField(max_length=60)
    user = models.IntegerField()
    class Meta:
        db_table = u'jos_fb_whoisonline'

class JosGlossaries(models.Model):
    id = models.IntegerField(primary_key=True)
    name = models.CharField(max_length=360)
    description = models.CharField(max_length=765)
    language = models.CharField(max_length=75)
    published = models.IntegerField()
    isdefault = models.IntegerField()
    class Meta:
        db_table = u'jos_glossaries'

class JosGlossary(models.Model):
    id = models.IntegerField(primary_key=True)
    tletter = models.CharField(max_length=3)
    tterm = models.CharField(unique=True, max_length=120)
    tdefinition = models.TextField()
    tname = models.CharField(max_length=60)
    tloca = models.CharField(max_length=180, blank=True)
    tmail = models.CharField(max_length=180, blank=True)
    tpage = models.CharField(max_length=450, blank=True)
    tdate = models.DateTimeField(null=True, blank=True)
    tcomment = models.TextField(blank=True)
    tedit = models.CharField(max_length=3)
    teditdate = models.DateTimeField(null=True, blank=True)
    published = models.IntegerField()
    catid = models.IntegerField()
    checked_out = models.IntegerField()
    class Meta:
        db_table = u'jos_glossary'

class JosGroups(models.Model):
    id = models.IntegerField(primary_key=True)
    name = models.CharField(max_length=150)
    class Meta:
        db_table = u'jos_groups'

class JosGuardxtConfig(models.Model):
    id = models.IntegerField(primary_key=True)
    emailrec = models.TextField(db_column='emailRec') # Field name made lowercase.
    version = models.CharField(max_length=21)
    exfolders = models.TextField(db_column='exFolders') # Field name made lowercase.
    warning = models.CharField(max_length=21)
    inithealth = models.CharField(max_length=3)
    cmdline = models.CharField(max_length=3)
    maxsize = models.CharField(max_length=30)
    class Meta:
        db_table = u'jos_guardxt_config'

class JosGuardxtFiles(models.Model):
    id = models.IntegerField(primary_key=True)
    type = models.CharField(max_length=3)
    path = models.CharField(max_length=768)
    time = models.IntegerField()
    mtime = models.IntegerField()
    state = models.CharField(max_length=3)
    fp = models.CharField(max_length=9)
    fpstate = models.CharField(max_length=3)
    hash = models.CharField(max_length=96)
    mhash = models.CharField(max_length=96)
    healthcheck = models.CharField(max_length=3)
    hcfile = models.CharField(max_length=300)
    class Meta:
        db_table = u'jos_guardxt_files'

class JosGuardxtHash(models.Model):
    id = models.IntegerField(primary_key=True)
    item = models.CharField(max_length=300)
    result = models.CharField(max_length=3)
    class Meta:
        db_table = u'jos_guardxt_hash'

class JosGuardxtRuns(models.Model):
    id = models.IntegerField(primary_key=True)
    type = models.CharField(max_length=3)
    time = models.IntegerField()
    log = models.TextField()
    class Meta:
        db_table = u'jos_guardxt_runs'

class JosItpmTags(models.Model):
    id = models.IntegerField(primary_key=True)
    content = models.TextField(blank=True)
    url_id = models.IntegerField()
    class Meta:
        db_table = u'jos_itpm_tags'

class JosItpmUrls(models.Model):
    id = models.IntegerField(primary_key=True)
    url = models.CharField(max_length=3072)
    published = models.IntegerField()
    class Meta:
        db_table = u'jos_itpm_urls'

class JosJcomments(models.Model):
    id = models.IntegerField(primary_key=True)
    parent = models.IntegerField()
    path = models.CharField(max_length=765)
    level = models.IntegerField()
    object_id = models.IntegerField()
    object_group = models.CharField(max_length=765)
    object_params = models.TextField()
    lang = models.CharField(max_length=765)
    userid = models.IntegerField()
    name = models.CharField(max_length=765)
    username = models.CharField(max_length=765)
    email = models.CharField(max_length=765)
    homepage = models.CharField(max_length=765)
    title = models.CharField(max_length=765)
    comment = models.TextField()
    ip = models.CharField(max_length=45)
    date = models.DateTimeField()
    isgood = models.IntegerField()
    ispoor = models.IntegerField()
    published = models.IntegerField()
    subscribe = models.IntegerField()
    source = models.CharField(max_length=765)
    source_id = models.IntegerField()
    checked_out = models.IntegerField()
    checked_out_time = models.DateTimeField()
    editor = models.CharField(max_length=150)
    class Meta:
        db_table = u'jos_jcomments'

class JosJcommentsCustomBbcodes(models.Model):
    id = models.IntegerField(primary_key=True)
    name = models.CharField(max_length=96)
    simple_pattern = models.CharField(max_length=765)
    simple_replacement_html = models.TextField()
    simple_replacement_text = models.TextField()
    pattern = models.CharField(max_length=765)
    replacement_html = models.TextField()
    replacement_text = models.TextField()
    button_acl = models.TextField()
    button_open_tag = models.CharField(max_length=48)
    button_close_tag = models.CharField(max_length=48)
    button_title = models.CharField(max_length=765)
    button_prompt = models.CharField(max_length=765)
    button_image = models.CharField(max_length=765)
    button_css = models.CharField(max_length=765)
    button_enabled = models.IntegerField()
    ordering = models.IntegerField()
    published = models.IntegerField()
    class Meta:
        db_table = u'jos_jcomments_custom_bbcodes'

class JosJcommentsReports(models.Model):
    id = models.IntegerField(primary_key=True)
    commentid = models.IntegerField()
    userid = models.IntegerField()
    name = models.CharField(max_length=765)
    ip = models.CharField(max_length=45)
    date = models.DateTimeField()
    reason = models.TextField()
    status = models.IntegerField()
    class Meta:
        db_table = u'jos_jcomments_reports'

class JosJcommentsSettings(models.Model):
    component = models.CharField(max_length=150, primary_key=True)
    lang = models.CharField(max_length=60, primary_key=True)
    name = models.CharField(max_length=150, primary_key=True)
    value = models.TextField()
    class Meta:
        db_table = u'jos_jcomments_settings'

class JosJcommentsSubscriptions(models.Model):
    id = models.IntegerField(primary_key=True)
    object_id = models.IntegerField()
    object_group = models.CharField(max_length=765)
    lang = models.CharField(max_length=765)
    userid = models.IntegerField()
    name = models.CharField(max_length=765)
    email = models.CharField(max_length=765)
    hash = models.CharField(max_length=765)
    published = models.IntegerField()
    class Meta:
        db_table = u'jos_jcomments_subscriptions'

class JosJcommentsVersion(models.Model):
    version = models.CharField(max_length=48, primary_key=True)
    previous = models.CharField(max_length=48)
    installed = models.DateTimeField()
    updated = models.DateTimeField()
    class Meta:
        db_table = u'jos_jcomments_version'

class JosJcommentsVotes(models.Model):
    id = models.IntegerField(primary_key=True)
    commentid = models.IntegerField()
    userid = models.IntegerField()
    ip = models.CharField(max_length=45)
    date = models.DateTimeField()
    value = models.IntegerField()
    class Meta:
        db_table = u'jos_jcomments_votes'

class JosJfContent(models.Model):
    id = models.IntegerField(primary_key=True)
    language_id = models.IntegerField()
    reference_id = models.IntegerField()
    reference_table = models.CharField(max_length=300)
    reference_field = models.CharField(max_length=300)
    value = models.TextField()
    original_value = models.CharField(max_length=765, blank=True)
    original_text = models.TextField(blank=True)
    modified = models.DateTimeField()
    modified_by = models.IntegerField()
    published = models.IntegerField()
    class Meta:
        db_table = u'jos_jf_content'

class JosJfTableinfo(models.Model):
    id = models.IntegerField(primary_key=True)
    joomlatablename = models.CharField(max_length=300)
    tablepkid = models.CharField(max_length=300, db_column='tablepkID') # Field name made lowercase.
    class Meta:
        db_table = u'jos_jf_tableinfo'

class JosJfbconnectConfig(models.Model):
    id = models.IntegerField(primary_key=True)
    setting = models.CharField(max_length=150)
    value = models.TextField(blank=True)
    created_at = models.DateTimeField()
    updated_at = models.DateTimeField()
    class Meta:
        db_table = u'jos_jfbconnect_config'

class JosJfbconnectUserMap(models.Model):
    id = models.IntegerField(primary_key=True)
    j_user_id = models.IntegerField()
    fb_user_id = models.BigIntegerField(null=True, blank=True)
    created_at = models.DateTimeField()
    updated_at = models.DateTimeField()
    class Meta:
        db_table = u'jos_jfbconnect_user_map'

class JosJformsBaf9C(models.Model):
    id = models.IntegerField(primary_key=True)
    uid = models.IntegerField()
    h86d8 = models.TextField()
    class Meta:
        db_table = u'jos_jforms_baf9c'

class JosJformsFields(models.Model):
    id = models.IntegerField(primary_key=True)
    pid = models.IntegerField()
    type = models.CharField(max_length=60)
    position = models.IntegerField()
    class Meta:
        db_table = u'jos_jforms_fields'

class JosJformsForms(models.Model):
    id = models.IntegerField(primary_key=True)
    title = models.CharField(max_length=765)
    type = models.IntegerField()
    plugins = models.CharField(max_length=300)
    theme = models.CharField(max_length=300)
    state = models.IntegerField()
    created = models.DateTimeField()
    created_by = models.IntegerField()
    modified = models.DateTimeField()
    modified_by = models.IntegerField()
    checked_out = models.IntegerField()
    checked_out_time = models.DateTimeField()
    publish_up = models.DateTimeField()
    publish_down = models.DateTimeField()
    groups = models.CharField(max_length=765)
    hits = models.IntegerField()
    thank = models.TextField()
    class Meta:
        db_table = u'jos_jforms_forms'

class JosJformsParameters(models.Model):
    id = models.IntegerField(primary_key=True)
    fid = models.IntegerField()
    pid = models.IntegerField()
    plugin_name = models.CharField(max_length=300)
    plugin_type = models.IntegerField()
    parameter_name = models.CharField(max_length=300)
    parameter_value = models.TextField()
    class Meta:
        db_table = u'jos_jforms_parameters'

class JosJformsTparameters(models.Model):
    id = models.IntegerField(primary_key=True)
    fid = models.IntegerField()
    pid = models.IntegerField()
    plugin_name = models.CharField(max_length=300)
    plugin_type = models.IntegerField()
    parameter_name = models.CharField(max_length=300)
    parameter_value = models.TextField()
    class Meta:
        db_table = u'jos_jforms_tparameters'

class JosJoomgallery(models.Model):
    id = models.IntegerField(primary_key=True)
    catid = models.IntegerField()
    imgtitle = models.TextField()
    imgauthor = models.CharField(max_length=150, blank=True)
    imgtext = models.TextField()
    imgdate = models.CharField(max_length=60, blank=True)
    imgcounter = models.IntegerField()
    imgvotes = models.IntegerField()
    imgvotesum = models.IntegerField()
    published = models.IntegerField()
    imgfilename = models.CharField(max_length=300)
    imgthumbname = models.CharField(max_length=300)
    checked_out = models.IntegerField()
    owner = models.IntegerField()
    approved = models.IntegerField()
    useruploaded = models.IntegerField()
    ordering = models.IntegerField()
    class Meta:
        db_table = u'jos_joomgallery'

class JosJoomgalleryCatg(models.Model):
    cid = models.IntegerField(primary_key=True)
    name = models.CharField(max_length=765)
    parent = models.IntegerField()
    description = models.TextField(blank=True)
    ordering = models.IntegerField()
    access = models.IntegerField()
    published = models.CharField(max_length=3)
    owner = models.IntegerField(null=True, blank=True)
    catimage = models.CharField(max_length=300, blank=True)
    img_position = models.IntegerField(null=True, blank=True)
    catpath = models.CharField(max_length=765)
    class Meta:
        db_table = u'jos_joomgallery_catg'

class JosJoomgalleryComments(models.Model):
    cmtid = models.IntegerField(primary_key=True)
    cmtpic = models.IntegerField()
    cmtip = models.CharField(max_length=45)
    userid = models.IntegerField()
    cmtname = models.CharField(max_length=150)
    cmttext = models.TextField()
    cmtdate = models.CharField(max_length=60, blank=True)
    published = models.IntegerField()
    approved = models.IntegerField()
    class Meta:
        db_table = u'jos_joomgallery_comments'

class JosJoomgalleryConfig(models.Model):
    id = models.IntegerField(primary_key=True)
    jg_pathimages = models.CharField(max_length=150)
    jg_pathoriginalimages = models.CharField(max_length=150)
    jg_paththumbs = models.CharField(max_length=150)
    jg_pathftpupload = models.CharField(max_length=150)
    jg_pathtemp = models.CharField(max_length=150)
    jg_wmpath = models.CharField(max_length=150)
    jg_wmfile = models.CharField(max_length=150)
    jg_dateformat = models.CharField(max_length=150)
    jg_checkupdate = models.IntegerField()
    jg_filenamewithjs = models.IntegerField()
    jg_filenamesearch = models.CharField(max_length=150)
    jg_filenamereplace = models.CharField(max_length=150)
    jg_thumbcreation = models.CharField(max_length=15)
    jg_fastgd2thumbcreation = models.IntegerField()
    jg_impath = models.CharField(max_length=150)
    jg_resizetomaxwidth = models.IntegerField()
    jg_maxwidth = models.IntegerField()
    jg_picturequality = models.IntegerField()
    jg_useforresizedirection = models.IntegerField()
    jg_thumbwidth = models.IntegerField()
    jg_thumbheight = models.IntegerField()
    jg_thumbquality = models.IntegerField()
    jg_uploadorder = models.IntegerField()
    jg_useorigfilename = models.IntegerField()
    jg_filenamenumber = models.IntegerField()
    jg_delete_original = models.IntegerField()
    jg_wrongvaluecolor = models.CharField(max_length=30)
    jg_combuild = models.IntegerField()
    jg_realname = models.IntegerField()
    jg_bridge = models.IntegerField()
    jg_cooliris = models.IntegerField()
    jg_coolirislink = models.IntegerField()
    jg_userspace = models.IntegerField()
    jg_approve = models.IntegerField()
    jg_usercat = models.IntegerField()
    jg_maxusercat = models.IntegerField()
    jg_userowncatsupload = models.IntegerField()
    jg_maxuserimage = models.IntegerField()
    jg_maxfilesize = models.IntegerField()
    jg_category = models.TextField()
    jg_usercategory = models.TextField()
    jg_usercatacc = models.IntegerField()
    jg_maxuploadfields = models.IntegerField()
    jg_useruploadnumber = models.IntegerField()
    jg_special_gif_upload = models.IntegerField()
    jg_delete_original_user = models.IntegerField()
    jg_newpiccopyright = models.IntegerField()
    jg_newpicnote = models.IntegerField()
    jg_showrating = models.IntegerField()
    jg_maxvoting = models.IntegerField()
    jg_onlyreguservotes = models.IntegerField()
    jg_showcomment = models.IntegerField()
    jg_anoncomment = models.IntegerField()
    jg_namedanoncomment = models.IntegerField()
    jg_approvecom = models.IntegerField()
    jg_secimages = models.IntegerField()
    jg_bbcodesupport = models.IntegerField()
    jg_smiliesupport = models.IntegerField()
    jg_anismilie = models.IntegerField()
    jg_smiliescolor = models.CharField(max_length=30)
    jg_firstorder = models.CharField(max_length=60)
    jg_secondorder = models.CharField(max_length=60)
    jg_thirdorder = models.CharField(max_length=60)
    jg_pagetitle_cat = models.CharField(max_length=150)
    jg_pagetitle_detail = models.CharField(max_length=150)
    jg_showgalleryhead = models.IntegerField()
    jg_showpathway = models.IntegerField()
    jg_completebreadcrumbs = models.IntegerField()
    jg_search = models.IntegerField()
    jg_showallpics = models.IntegerField()
    jg_showallhits = models.IntegerField()
    jg_showbacklink = models.IntegerField()
    jg_suppresscredits = models.IntegerField()
    jg_showuserpanel = models.IntegerField()
    jg_showallpicstoadmin = models.IntegerField()
    jg_showminithumbs = models.IntegerField()
    jg_openjs_padding = models.IntegerField()
    jg_openjs_background = models.CharField(max_length=30)
    jg_dhtml_border = models.CharField(max_length=30)
    jg_show_title_in_dhtml = models.IntegerField()
    jg_show_description_in_dhtml = models.IntegerField()
    jg_lightbox_speed = models.IntegerField()
    jg_lightbox_slide_all = models.IntegerField()
    jg_resize_js_image = models.IntegerField()
    jg_disable_rightclick_original = models.IntegerField()
    jg_showgallerysubhead = models.IntegerField()
    jg_showallcathead = models.IntegerField()
    jg_colcat = models.IntegerField()
    jg_catperpage = models.IntegerField()
    jg_ordercatbyalpha = models.IntegerField()
    jg_showgallerypagenav = models.IntegerField()
    jg_showcatcount = models.IntegerField()
    jg_showcatthumb = models.IntegerField()
    jg_showrandomcatthumb = models.IntegerField()
    jg_ctalign = models.IntegerField()
    jg_showtotalcathits = models.IntegerField()
    jg_showcatasnew = models.IntegerField()
    jg_catdaysnew = models.IntegerField()
    jg_rmsm = models.IntegerField()
    jg_showrmsmcats = models.IntegerField()
    jg_showsubsingalleryview = models.IntegerField()
    jg_showcathead = models.IntegerField()
    jg_usercatorder = models.IntegerField()
    jg_usercatorderlist = models.CharField(max_length=150)
    jg_showcatdescriptionincat = models.IntegerField()
    jg_showpagenav = models.IntegerField()
    jg_showpiccount = models.IntegerField()
    jg_perpage = models.IntegerField()
    jg_catthumbalign = models.IntegerField()
    jg_colnumb = models.IntegerField()
    jg_detailpic_open = models.IntegerField()
    jg_lightboxbigpic = models.IntegerField()
    jg_showtitle = models.IntegerField()
    jg_showpicasnew = models.IntegerField()
    jg_daysnew = models.IntegerField()
    jg_showhits = models.IntegerField()
    jg_showauthor = models.IntegerField()
    jg_showowner = models.IntegerField()
    jg_showcatcom = models.IntegerField()
    jg_showcatrate = models.IntegerField()
    jg_showcatdescription = models.IntegerField()
    jg_showcategorydownload = models.IntegerField()
    jg_showcategoryfavourite = models.IntegerField()
    jg_showsubcathead = models.IntegerField()
    jg_showsubcatcount = models.IntegerField()
    jg_colsubcat = models.IntegerField()
    jg_subperpage = models.IntegerField()
    jg_showpagenavsubs = models.IntegerField()
    jg_subcatthumbalign = models.IntegerField()
    jg_showsubthumbs = models.IntegerField()
    jg_showrandomsubthumb = models.IntegerField()
    jg_ordersubcatbyalpha = models.IntegerField()
    jg_showtotalsubcathits = models.IntegerField()
    jg_showdetailpage = models.IntegerField()
    jg_showdetailnumberofpics = models.IntegerField()
    jg_cursor_navigation = models.IntegerField()
    jg_disable_rightclick_detail = models.IntegerField()
    jg_showdetailtitle = models.IntegerField()
    jg_showdetail = models.IntegerField()
    jg_showdetailaccordion = models.IntegerField()
    jg_showdetaildescription = models.IntegerField()
    jg_showdetaildatum = models.IntegerField()
    jg_showdetailhits = models.IntegerField()
    jg_showdetailrating = models.IntegerField()
    jg_showdetailfilesize = models.IntegerField()
    jg_showdetailauthor = models.IntegerField()
    jg_showoriginalfilesize = models.IntegerField()
    jg_showdetaildownload = models.IntegerField()
    jg_downloadfile = models.IntegerField()
    jg_downloadwithwatermark = models.IntegerField()
    jg_watermark = models.IntegerField()
    jg_watermarkpos = models.IntegerField()
    jg_bigpic = models.IntegerField()
    jg_bigpic_open = models.IntegerField()
    jg_bbcodelink = models.IntegerField()
    jg_showcommentsunreg = models.IntegerField()
    jg_showcommentsarea = models.IntegerField()
    jg_send2friend = models.IntegerField()
    jg_minis = models.IntegerField()
    jg_motionminis = models.IntegerField()
    jg_motionminiwidth = models.IntegerField(db_column='jg_motionminiWidth') # Field name made lowercase.
    jg_motionminiheight = models.IntegerField(db_column='jg_motionminiHeight') # Field name made lowercase.
    jg_miniwidth = models.IntegerField(db_column='jg_miniWidth') # Field name made lowercase.
    jg_miniheight = models.IntegerField(db_column='jg_miniHeight') # Field name made lowercase.
    jg_minisprop = models.IntegerField()
    jg_nameshields = models.IntegerField()
    jg_nameshields_unreg = models.IntegerField()
    jg_show_nameshields_unreg = models.IntegerField()
    jg_nameshields_height = models.IntegerField()
    jg_nameshields_width = models.IntegerField()
    jg_slideshow = models.IntegerField()
    jg_slideshow_timer = models.IntegerField()
    jg_slideshow_usefilter = models.IntegerField()
    jg_slideshow_filterbychance = models.IntegerField()
    jg_slideshow_filtertimer = models.IntegerField()
    jg_showsliderepeater = models.IntegerField()
    jg_showexifdata = models.IntegerField()
    jg_subifdtags = models.TextField()
    jg_ifdotags = models.TextField()
    jg_gpstags = models.TextField()
    jg_showiptcdata = models.IntegerField()
    jg_iptctags = models.TextField()
    jg_showtoplist = models.IntegerField()
    jg_toplist = models.IntegerField()
    jg_topthumbalign = models.IntegerField()
    jg_toptextalign = models.IntegerField()
    jg_toplistcols = models.IntegerField()
    jg_whereshowtoplist = models.IntegerField()
    jg_showrate = models.IntegerField()
    jg_showlatest = models.IntegerField()
    jg_showcom = models.IntegerField()
    jg_showthiscomment = models.IntegerField()
    jg_showmostviewed = models.IntegerField()
    jg_favourites = models.IntegerField()
    jg_showdetailfavourite = models.IntegerField()
    jg_favouritesshownotauth = models.IntegerField()
    jg_maxfavourites = models.IntegerField()
    jg_zipdownload = models.IntegerField()
    jg_usefavouritesforpubliczip = models.IntegerField()
    jg_usefavouritesforzip = models.IntegerField()
    class Meta:
        db_table = u'jos_joomgallery_config'

class JosJoomgalleryCountstop(models.Model):
    cspicid = models.IntegerField()
    csip = models.CharField(max_length=60)
    cssessionid = models.CharField(max_length=600, blank=True)
    cstime = models.DateTimeField(null=True, blank=True)
    class Meta:
        db_table = u'jos_joomgallery_countstop'

class JosJoomgalleryMaintenance(models.Model):
    id = models.IntegerField(primary_key=True)
    refid = models.IntegerField()
    catid = models.IntegerField()
    owner = models.IntegerField()
    title = models.TextField()
    thumb = models.CharField(max_length=765)
    img = models.CharField(max_length=765)
    orig = models.CharField(max_length=765)
    thumborphan = models.IntegerField()
    imgorphan = models.IntegerField()
    origorphan = models.IntegerField()
    type = models.IntegerField()
    class Meta:
        db_table = u'jos_joomgallery_maintenance'

class JosJoomgalleryNameshields(models.Model):
    nid = models.IntegerField(primary_key=True)
    npicid = models.IntegerField()
    nuserid = models.IntegerField()
    nxvalue = models.IntegerField()
    nyvalue = models.IntegerField()
    nuserip = models.CharField(max_length=45)
    ndate = models.CharField(max_length=60)
    nzindex = models.IntegerField()
    class Meta:
        db_table = u'jos_joomgallery_nameshields'

class JosJoomgalleryOrphans(models.Model):
    id = models.IntegerField(primary_key=True)
    fullpath = models.CharField(max_length=765)
    type = models.CharField(max_length=21)
    refid = models.IntegerField()
    title = models.TextField()
    class Meta:
        db_table = u'jos_joomgallery_orphans'

class JosJoomgalleryUsers(models.Model):
    uid = models.IntegerField(primary_key=True)
    uuserid = models.IntegerField()
    piclist = models.TextField(blank=True)
    layout = models.IntegerField()
    time = models.DateTimeField()
    zipname = models.CharField(max_length=210)
    class Meta:
        db_table = u'jos_joomgallery_users'

class JosJoomgalleryVotes(models.Model):
    voteid = models.IntegerField(primary_key=True)
    picid = models.IntegerField()
    userid = models.IntegerField()
    userip = models.CharField(max_length=45)
    datevoted = models.CharField(max_length=60)
    timevoted = models.CharField(max_length=60)
    vote = models.IntegerField()
    class Meta:
        db_table = u'jos_joomgallery_votes'

class JosJstatsBrowsers(models.Model):
    browser_id = models.IntegerField(primary_key=True)
    browsertype_id = models.IntegerField()
    browser_key = models.CharField(max_length=150)
    browser_name = models.CharField(max_length=150)
    browser_img = models.CharField(max_length=36)
    class Meta:
        db_table = u'jos_jstats_browsers'

class JosJstatsConfiguration(models.Model):
    description = models.CharField(max_length=750, primary_key=True)
    value = models.CharField(max_length=750, blank=True)
    class Meta:
        db_table = u'jos_jstats_configuration'

class JosJstatsImpressions(models.Model):
    page_id = models.IntegerField()
    visit_id = models.IntegerField()
    class Meta:
        db_table = u'jos_jstats_impressions'

class JosJstatsIpaddresses(models.Model):
    ip = models.CharField(max_length=150)
    nslookup = models.CharField(max_length=765, blank=True)
    tld = models.CharField(max_length=30)
    useragent = models.CharField(max_length=765, blank=True)
    system = models.CharField(max_length=150)
    browser = models.CharField(max_length=150)
    id = models.IntegerField(primary_key=True)
    type = models.IntegerField()
    exclude = models.IntegerField()
    class Meta:
        db_table = u'jos_jstats_ipaddresses'

class JosJstatsIptocountry(models.Model):
    ip_from = models.BigIntegerField(primary_key=True, db_column='IP_FROM') # Field name made lowercase.
    ip_to = models.BigIntegerField(db_column='IP_TO') # Field name made lowercase.
    country_code2 = models.CharField(max_length=6, db_column='COUNTRY_CODE2') # Field name made lowercase.
    country_name = models.CharField(max_length=150, db_column='COUNTRY_NAME') # Field name made lowercase.
    class Meta:
        db_table = u'jos_jstats_iptocountry'

class JosJstatsKeywords(models.Model):
    kwdate = models.DateField()
    searcher_id = models.IntegerField()
    keywords = models.CharField(max_length=765)
    visit_id = models.IntegerField()
    class Meta:
        db_table = u'jos_jstats_keywords'

class JosJstatsPageRequestC(models.Model):
    page_id = models.IntegerField()
    hour = models.IntegerField()
    day = models.IntegerField()
    month = models.IntegerField()
    year = models.IntegerField()
    count = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'jos_jstats_page_request_c'

class JosJstatsPages(models.Model):
    page_id = models.IntegerField(primary_key=True)
    page = models.TextField()
    page_title = models.CharField(max_length=765, blank=True)
    class Meta:
        db_table = u'jos_jstats_pages'

class JosJstatsReferrer(models.Model):
    referrer = models.CharField(max_length=765)
    domain = models.CharField(max_length=300)
    refid = models.IntegerField(primary_key=True)
    day = models.IntegerField()
    month = models.IntegerField()
    year = models.IntegerField()
    visit_id = models.IntegerField()
    class Meta:
        db_table = u'jos_jstats_referrer'

class JosJstatsSearchers(models.Model):
    searcher_id = models.IntegerField(primary_key=True)
    searcher_name = models.CharField(max_length=300)
    searcher_domain = models.CharField(max_length=300)
    searcher_key = models.CharField(max_length=150)
    class Meta:
        db_table = u'jos_jstats_searchers'

class JosJstatsSystems(models.Model):
    sys_id = models.IntegerField(primary_key=True)
    sys_string = models.CharField(max_length=75)
    sys_fullname = models.CharField(max_length=75)
    sys_type = models.IntegerField()
    sys_img = models.CharField(max_length=36)
    class Meta:
        db_table = u'jos_jstats_systems'

class JosJstatsTopleveldomains(models.Model):
    tld_id = models.IntegerField(primary_key=True)
    tld = models.CharField(max_length=27)
    fullname = models.CharField(max_length=765)
    class Meta:
        db_table = u'jos_jstats_topleveldomains'

class JosJstatsVisits(models.Model):
    visit_id = models.IntegerField(primary_key=True)
    visitor_id = models.IntegerField()
    joomla_userid = models.IntegerField()
    visit_date = models.DateField()
    visit_time = models.TextField() # This field type is a guess.
    class Meta:
        db_table = u'jos_jstats_visits'

class JosJvlinxCategories(models.Model):
    id = models.BigIntegerField(primary_key=True)
    cpid = models.BigIntegerField()
    name = models.CharField(max_length=90)
    description = models.CharField(max_length=300)
    maxlinks = models.BigIntegerField()
    snap_status = models.IntegerField()
    accept_links = models.IntegerField()
    visibility = models.IntegerField()
    class Meta:
        db_table = u'jos_jvlinx_categories'

class JosJvlinxLinks(models.Model):
    id = models.BigIntegerField(primary_key=True)
    link_type = models.CharField(max_length=60)
    partner_title = models.CharField(max_length=240)
    partner_url = models.CharField(max_length=600)
    partner_desc = models.CharField(max_length=750)
    partner_email = models.CharField(max_length=300)
    reciprocal_link_url = models.CharField(max_length=600)
    link_category = models.IntegerField()
    link_status = models.CharField(max_length=150)
    link_added_on = models.BigIntegerField()
    link_published_on = models.BigIntegerField()
    link_rating = models.FloatField()
    num_votes = models.BigIntegerField()
    rlc_last_checked_on = models.BigIntegerField()
    reject_reason = models.CharField(max_length=750)
    emstr = models.CharField(max_length=96)
    date_of_last_reminder = models.BigIntegerField()
    snap_status = models.IntegerField()
    enable_scheduler = models.IntegerField()
    featured = models.IntegerField()
    exchange_link = models.IntegerField()
    banner_loc = models.CharField(max_length=750)
    class Meta:
        db_table = u'jos_jvlinx_links'

class JosJvlinxSettings(models.Model):
    version = models.CharField(max_length=120)
    self_title = models.CharField(max_length=240)
    self_url = models.CharField(max_length=240)
    self_desc = models.CharField(max_length=750)
    self_email = models.CharField(max_length=300)
    rlc_status_update = models.IntegerField()
    enable_rlc_fe = models.IntegerField()
    auto_approve = models.IntegerField()
    show_latest_links = models.IntegerField()
    enable_link_rating = models.IntegerField()
    link_rating_by = models.CharField(max_length=36)
    display_ratings = models.IntegerField()
    enable_search = models.IntegerField()
    fe_addlink = models.IntegerField()
    fe_title = models.CharField(max_length=240)
    fe_dir_summary = models.TextField()
    fe_newlink_summary = models.TextField()
    fe_instructions = models.TextField()
    fe_num_links = models.IntegerField()
    email_approval = models.IntegerField()
    enable_checklinkstatus = models.IntegerField()
    enable_recweb = models.IntegerField()
    recommend_site_intro = models.TextField()
    recweb_by = models.CharField(max_length=36)
    enable_ads = models.IntegerField()
    ad_top = models.TextField()
    ad_bottom = models.TextField()
    enable_snap = models.IntegerField()
    enable_captcha = models.IntegerField()
    enable_scheduler = models.IntegerField()
    result_mode = models.CharField(max_length=30)
    window_new = models.IntegerField()
    enable_flinks = models.IntegerField()
    flinks_numshow = models.IntegerField()
    flinks_dtype = models.CharField(max_length=60)
    flinks_subamount = models.FloatField()
    flinks_subemail = models.CharField(max_length=240)
    fe_addbanner = models.IntegerField()
    banner_loc = models.CharField(max_length=750)
    fe_newbanner_summary = models.TextField()
    banner_kbsize_max = models.BigIntegerField()
    banner_width_max = models.BigIntegerField()
    banner_height_max = models.BigIntegerField()
    banner_extns = models.CharField(max_length=750)
    access_key = models.CharField(max_length=240)
    secret_key = models.CharField(max_length=240)
    generic_reject_reason = models.TextField()
    header_slogan = models.CharField(max_length=240)
    show_flinks = models.IntegerField()
    class Meta:
        db_table = u'jos_jvlinx_settings'

class JosJvlinxVotes(models.Model):
    id = models.IntegerField(primary_key=True)
    lid = models.IntegerField()
    vote_ip = models.CharField(max_length=90)
    vote_time = models.IntegerField()
    class Meta:
        db_table = u'jos_jvlinx_votes'

class JosKunenaAnnouncement(models.Model):
    id = models.IntegerField(primary_key=True)
    title = models.TextField()
    sdescription = models.TextField()
    description = models.TextField()
    created = models.DateTimeField()
    published = models.IntegerField()
    ordering = models.IntegerField()
    showdate = models.IntegerField()
    class Meta:
        db_table = u'jos_kunena_announcement'

class JosKunenaAttachments(models.Model):
    id = models.IntegerField(primary_key=True)
    mesid = models.IntegerField()
    userid = models.IntegerField()
    hash = models.CharField(max_length=96, blank=True)
    size = models.IntegerField(null=True, blank=True)
    folder = models.CharField(max_length=765)
    filetype = models.CharField(max_length=60)
    filename = models.CharField(max_length=765)
    class Meta:
        db_table = u'jos_kunena_attachments'

class JosKunenaAttachmentsBak(models.Model):
    mesid = models.IntegerField()
    filelocation = models.TextField()
    class Meta:
        db_table = u'jos_kunena_attachments_bak'

class JosKunenaCategories(models.Model):
    id = models.IntegerField()
    parent = models.IntegerField(null=True, blank=True)
    name = models.TextField(blank=True)
    cat_emoticon = models.IntegerField()
    locked = models.IntegerField()
    alert_admin = models.IntegerField()
    moderated = models.IntegerField()
    moderators = models.CharField(max_length=45, blank=True)
    accesstype = models.CharField(max_length=60)
    access = models.IntegerField()
    pub_access = models.IntegerField(null=True, blank=True)
    pub_recurse = models.IntegerField(null=True, blank=True)
    admin_access = models.IntegerField(null=True, blank=True)
    admin_recurse = models.IntegerField(null=True, blank=True)
    ordering = models.IntegerField()
    future2 = models.IntegerField(null=True, blank=True)
    published = models.IntegerField()
    checked_out = models.IntegerField()
    checked_out_time = models.DateTimeField()
    review = models.IntegerField()
    allow_anonymous = models.IntegerField()
    post_anonymous = models.IntegerField()
    hits = models.IntegerField()
    description = models.TextField()
    headerdesc = models.TextField()
    class_sfx = models.CharField(max_length=60)
    allow_polls = models.IntegerField()
    id_last_msg = models.IntegerField()
    numtopics = models.IntegerField(db_column='numTopics') # Field name made lowercase.
    numposts = models.IntegerField(db_column='numPosts') # Field name made lowercase.
    time_last_msg = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'jos_kunena_categories'

class JosKunenaConfig(models.Model):
    id = models.IntegerField(primary_key=True)
    board_title = models.TextField(blank=True)
    email = models.TextField(blank=True)
    board_offline = models.IntegerField(null=True, blank=True)
    board_ofset = models.TextField(blank=True)
    offline_message = models.TextField(blank=True)
    enablerss = models.IntegerField(null=True, blank=True)
    enablepdf = models.IntegerField(null=True, blank=True)
    threads_per_page = models.IntegerField(null=True, blank=True)
    messages_per_page = models.IntegerField(null=True, blank=True)
    messages_per_page_search = models.IntegerField(null=True, blank=True)
    showhistory = models.IntegerField(null=True, blank=True)
    historylimit = models.IntegerField(null=True, blank=True)
    shownew = models.IntegerField(null=True, blank=True)
    jmambot = models.IntegerField(null=True, blank=True)
    disemoticons = models.IntegerField(null=True, blank=True)
    template = models.TextField(blank=True)
    showannouncement = models.IntegerField(null=True, blank=True)
    avataroncat = models.IntegerField(null=True, blank=True)
    catimagepath = models.TextField(blank=True)
    showchildcaticon = models.IntegerField(null=True, blank=True)
    annmodid = models.TextField(blank=True)
    rtewidth = models.IntegerField(null=True, blank=True)
    rteheight = models.IntegerField(null=True, blank=True)
    enableforumjump = models.IntegerField(null=True, blank=True)
    reportmsg = models.IntegerField(null=True, blank=True)
    username = models.IntegerField(null=True, blank=True)
    askemail = models.IntegerField(null=True, blank=True)
    showemail = models.IntegerField(null=True, blank=True)
    showuserstats = models.IntegerField(null=True, blank=True)
    showkarma = models.IntegerField(null=True, blank=True)
    useredit = models.IntegerField(null=True, blank=True)
    useredittime = models.IntegerField(null=True, blank=True)
    useredittimegrace = models.IntegerField(null=True, blank=True)
    editmarkup = models.IntegerField(null=True, blank=True)
    allowsubscriptions = models.IntegerField(null=True, blank=True)
    subscriptionschecked = models.IntegerField(null=True, blank=True)
    allowfavorites = models.IntegerField(null=True, blank=True)
    maxsubject = models.IntegerField(null=True, blank=True)
    maxsig = models.IntegerField(null=True, blank=True)
    regonly = models.IntegerField(null=True, blank=True)
    changename = models.IntegerField(null=True, blank=True)
    pubwrite = models.IntegerField(null=True, blank=True)
    floodprotection = models.IntegerField(null=True, blank=True)
    mailmod = models.IntegerField(null=True, blank=True)
    mailadmin = models.IntegerField(null=True, blank=True)
    captcha = models.IntegerField(null=True, blank=True)
    mailfull = models.IntegerField(null=True, blank=True)
    allowavatar = models.IntegerField(null=True, blank=True)
    allowavatarupload = models.IntegerField(null=True, blank=True)
    allowavatargallery = models.IntegerField(null=True, blank=True)
    avatarquality = models.IntegerField(null=True, blank=True)
    avatarsize = models.IntegerField(null=True, blank=True)
    allowimageupload = models.IntegerField(null=True, blank=True)
    allowimageregupload = models.IntegerField(null=True, blank=True)
    imageheight = models.IntegerField(null=True, blank=True)
    imagewidth = models.IntegerField(null=True, blank=True)
    imagesize = models.IntegerField(null=True, blank=True)
    allowfileupload = models.IntegerField(null=True, blank=True)
    allowfileregupload = models.IntegerField(null=True, blank=True)
    filetypes = models.TextField(blank=True)
    filesize = models.IntegerField(null=True, blank=True)
    showranking = models.IntegerField(null=True, blank=True)
    rankimages = models.IntegerField(null=True, blank=True)
    avatar_src = models.TextField(blank=True)
    fb_profile = models.TextField(blank=True)
    pm_component = models.TextField(blank=True)
    userlist_rows = models.IntegerField(null=True, blank=True)
    userlist_online = models.IntegerField(null=True, blank=True)
    userlist_avatar = models.IntegerField(null=True, blank=True)
    userlist_name = models.IntegerField(null=True, blank=True)
    userlist_username = models.IntegerField(null=True, blank=True)
    userlist_posts = models.IntegerField(null=True, blank=True)
    userlist_karma = models.IntegerField(null=True, blank=True)
    userlist_email = models.IntegerField(null=True, blank=True)
    userlist_usertype = models.IntegerField(null=True, blank=True)
    userlist_joindate = models.IntegerField(null=True, blank=True)
    userlist_lastvisitdate = models.IntegerField(null=True, blank=True)
    userlist_userhits = models.IntegerField(null=True, blank=True)
    latestcategory = models.TextField(blank=True)
    showstats = models.IntegerField(null=True, blank=True)
    showwhoisonline = models.IntegerField(null=True, blank=True)
    showgenstats = models.IntegerField(null=True, blank=True)
    showpopuserstats = models.IntegerField(null=True, blank=True)
    popusercount = models.IntegerField(null=True, blank=True)
    showpopsubjectstats = models.IntegerField(null=True, blank=True)
    popsubjectcount = models.IntegerField(null=True, blank=True)
    usernamechange = models.IntegerField(null=True, blank=True)
    rules_infb = models.IntegerField(null=True, blank=True)
    rules_cid = models.IntegerField(null=True, blank=True)
    help_infb = models.IntegerField(null=True, blank=True)
    help_cid = models.IntegerField(null=True, blank=True)
    showspoilertag = models.IntegerField(null=True, blank=True)
    showvideotag = models.IntegerField(null=True, blank=True)
    showebaytag = models.IntegerField(null=True, blank=True)
    trimlongurls = models.IntegerField(null=True, blank=True)
    trimlongurlsfront = models.IntegerField(null=True, blank=True)
    trimlongurlsback = models.IntegerField(null=True, blank=True)
    autoembedyoutube = models.IntegerField(null=True, blank=True)
    autoembedebay = models.IntegerField(null=True, blank=True)
    ebaylanguagecode = models.TextField(blank=True)
    fbsessiontimeout = models.IntegerField(null=True, blank=True)
    highlightcode = models.IntegerField(null=True, blank=True)
    rss_type = models.TextField(blank=True)
    rss_timelimit = models.TextField(blank=True)
    rss_limit = models.IntegerField(null=True, blank=True)
    rss_included_categories = models.TextField(blank=True)
    rss_excluded_categories = models.TextField(blank=True)
    rss_specification = models.TextField(blank=True)
    rss_allow_html = models.IntegerField(null=True, blank=True)
    rss_author_format = models.TextField(blank=True)
    rss_author_in_title = models.IntegerField(null=True, blank=True)
    rss_word_count = models.TextField(blank=True)
    rss_old_titles = models.IntegerField(null=True, blank=True)
    rss_cache = models.IntegerField(null=True, blank=True)
    fbdefaultpage = models.TextField(blank=True)
    default_sort = models.TextField(blank=True)
    alphauserpointsnumchars = models.IntegerField(null=True, blank=True)
    sef = models.IntegerField(null=True, blank=True)
    sefcats = models.IntegerField(null=True, blank=True)
    sefutf8 = models.IntegerField(null=True, blank=True)
    showimgforguest = models.IntegerField(null=True, blank=True)
    showfileforguest = models.IntegerField(null=True, blank=True)
    pollnboptions = models.IntegerField(null=True, blank=True)
    pollallowvoteone = models.IntegerField(null=True, blank=True)
    pollenabled = models.IntegerField(null=True, blank=True)
    poppollscount = models.IntegerField(null=True, blank=True)
    showpoppollstats = models.IntegerField(null=True, blank=True)
    polltimebtvotes = models.TextField(blank=True)
    pollnbvotesbyuser = models.IntegerField(null=True, blank=True)
    pollresultsuserslist = models.IntegerField(null=True, blank=True)
    maxpersotext = models.IntegerField(null=True, blank=True)
    ordering_system = models.TextField(blank=True)
    post_dateformat = models.TextField(blank=True)
    post_dateformat_hover = models.TextField(blank=True)
    hide_ip = models.IntegerField(null=True, blank=True)
    js_actstr_integration = models.IntegerField(null=True, blank=True)
    imagetypes = models.TextField(blank=True)
    checkmimetypes = models.IntegerField(null=True, blank=True)
    imagemimetypes = models.TextField(blank=True)
    imagequality = models.IntegerField(null=True, blank=True)
    thumbheight = models.IntegerField(null=True, blank=True)
    thumbwidth = models.IntegerField(null=True, blank=True)
    hideuserprofileinfo = models.TextField(blank=True)
    integration_access = models.TextField(blank=True)
    integration_login = models.TextField(blank=True)
    integration_avatar = models.TextField(blank=True)
    integration_profile = models.TextField(blank=True)
    integration_private = models.TextField(blank=True)
    integration_activity = models.TextField(blank=True)
    boxghostmessage = models.IntegerField(null=True, blank=True)
    userdeletetmessage = models.IntegerField(null=True, blank=True)
    latestcategory_in = models.IntegerField(null=True, blank=True)
    topicicons = models.IntegerField(null=True, blank=True)
    onlineusers = models.IntegerField(null=True, blank=True)
    debug = models.IntegerField(null=True, blank=True)
    catsautosubscribed = models.IntegerField(null=True, blank=True)
    showbannedreason = models.IntegerField(null=True, blank=True)
    version_check = models.IntegerField(null=True, blank=True)
    showthankyou = models.IntegerField(null=True, blank=True)
    showpopthankyoustats = models.IntegerField(null=True, blank=True)
    popthankscount = models.IntegerField(null=True, blank=True)
    mod_see_deleted = models.IntegerField(null=True, blank=True)
    bbcode_img_secure = models.TextField(blank=True)
    listcat_show_moderators = models.IntegerField(null=True, blank=True)
    lightbox = models.IntegerField(null=True, blank=True)
    activity_limit = models.IntegerField(null=True, blank=True)
    show_list_time = models.IntegerField(null=True, blank=True)
    show_session_type = models.IntegerField(null=True, blank=True)
    show_session_starttime = models.IntegerField(null=True, blank=True)
    userlist_allowed = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'jos_kunena_config'

class JosKunenaConfigBackup(models.Model):
    id = models.IntegerField()
    board_title = models.TextField(blank=True)
    email = models.TextField(blank=True)
    board_offline = models.IntegerField(null=True, blank=True)
    board_ofset = models.TextField(blank=True)
    offline_message = models.TextField(blank=True)
    enablerss = models.IntegerField(null=True, blank=True)
    enablepdf = models.IntegerField(null=True, blank=True)
    threads_per_page = models.IntegerField(null=True, blank=True)
    messages_per_page = models.IntegerField(null=True, blank=True)
    messages_per_page_search = models.IntegerField(null=True, blank=True)
    showhistory = models.IntegerField(null=True, blank=True)
    historylimit = models.IntegerField(null=True, blank=True)
    shownew = models.IntegerField(null=True, blank=True)
    jmambot = models.IntegerField(null=True, blank=True)
    disemoticons = models.IntegerField(null=True, blank=True)
    template = models.TextField(blank=True)
    showannouncement = models.IntegerField(null=True, blank=True)
    avataroncat = models.IntegerField(null=True, blank=True)
    catimagepath = models.TextField(blank=True)
    showchildcaticon = models.IntegerField(null=True, blank=True)
    annmodid = models.TextField(blank=True)
    rtewidth = models.IntegerField(null=True, blank=True)
    rteheight = models.IntegerField(null=True, blank=True)
    enableforumjump = models.IntegerField(null=True, blank=True)
    reportmsg = models.IntegerField(null=True, blank=True)
    username = models.IntegerField(null=True, blank=True)
    askemail = models.IntegerField(null=True, blank=True)
    showemail = models.IntegerField(null=True, blank=True)
    showuserstats = models.IntegerField(null=True, blank=True)
    showkarma = models.IntegerField(null=True, blank=True)
    useredit = models.IntegerField(null=True, blank=True)
    useredittime = models.IntegerField(null=True, blank=True)
    useredittimegrace = models.IntegerField(null=True, blank=True)
    editmarkup = models.IntegerField(null=True, blank=True)
    allowsubscriptions = models.IntegerField(null=True, blank=True)
    subscriptionschecked = models.IntegerField(null=True, blank=True)
    allowfavorites = models.IntegerField(null=True, blank=True)
    maxsubject = models.IntegerField(null=True, blank=True)
    maxsig = models.IntegerField(null=True, blank=True)
    regonly = models.IntegerField(null=True, blank=True)
    changename = models.IntegerField(null=True, blank=True)
    pubwrite = models.IntegerField(null=True, blank=True)
    floodprotection = models.IntegerField(null=True, blank=True)
    mailmod = models.IntegerField(null=True, blank=True)
    mailadmin = models.IntegerField(null=True, blank=True)
    captcha = models.IntegerField(null=True, blank=True)
    mailfull = models.IntegerField(null=True, blank=True)
    allowavatar = models.IntegerField(null=True, blank=True)
    allowavatarupload = models.IntegerField(null=True, blank=True)
    allowavatargallery = models.IntegerField(null=True, blank=True)
    avatarquality = models.IntegerField(null=True, blank=True)
    avatarsize = models.IntegerField(null=True, blank=True)
    allowimageupload = models.IntegerField(null=True, blank=True)
    allowimageregupload = models.IntegerField(null=True, blank=True)
    imageheight = models.IntegerField(null=True, blank=True)
    imagewidth = models.IntegerField(null=True, blank=True)
    imagesize = models.IntegerField(null=True, blank=True)
    allowfileupload = models.IntegerField(null=True, blank=True)
    allowfileregupload = models.IntegerField(null=True, blank=True)
    filetypes = models.TextField(blank=True)
    filesize = models.IntegerField(null=True, blank=True)
    showranking = models.IntegerField(null=True, blank=True)
    rankimages = models.IntegerField(null=True, blank=True)
    avatar_src = models.TextField(blank=True)
    fb_profile = models.TextField(blank=True)
    pm_component = models.TextField(blank=True)
    userlist_rows = models.IntegerField(null=True, blank=True)
    userlist_online = models.IntegerField(null=True, blank=True)
    userlist_avatar = models.IntegerField(null=True, blank=True)
    userlist_name = models.IntegerField(null=True, blank=True)
    userlist_username = models.IntegerField(null=True, blank=True)
    userlist_posts = models.IntegerField(null=True, blank=True)
    userlist_karma = models.IntegerField(null=True, blank=True)
    userlist_email = models.IntegerField(null=True, blank=True)
    userlist_usertype = models.IntegerField(null=True, blank=True)
    userlist_joindate = models.IntegerField(null=True, blank=True)
    userlist_lastvisitdate = models.IntegerField(null=True, blank=True)
    userlist_userhits = models.IntegerField(null=True, blank=True)
    latestcategory = models.TextField(blank=True)
    showstats = models.IntegerField(null=True, blank=True)
    showwhoisonline = models.IntegerField(null=True, blank=True)
    showgenstats = models.IntegerField(null=True, blank=True)
    showpopuserstats = models.IntegerField(null=True, blank=True)
    popusercount = models.IntegerField(null=True, blank=True)
    showpopsubjectstats = models.IntegerField(null=True, blank=True)
    popsubjectcount = models.IntegerField(null=True, blank=True)
    usernamechange = models.IntegerField(null=True, blank=True)
    rules_infb = models.IntegerField(null=True, blank=True)
    rules_cid = models.IntegerField(null=True, blank=True)
    help_infb = models.IntegerField(null=True, blank=True)
    help_cid = models.IntegerField(null=True, blank=True)
    showspoilertag = models.IntegerField(null=True, blank=True)
    showvideotag = models.IntegerField(null=True, blank=True)
    showebaytag = models.IntegerField(null=True, blank=True)
    trimlongurls = models.IntegerField(null=True, blank=True)
    trimlongurlsfront = models.IntegerField(null=True, blank=True)
    trimlongurlsback = models.IntegerField(null=True, blank=True)
    autoembedyoutube = models.IntegerField(null=True, blank=True)
    autoembedebay = models.IntegerField(null=True, blank=True)
    ebaylanguagecode = models.TextField(blank=True)
    fbsessiontimeout = models.IntegerField(null=True, blank=True)
    highlightcode = models.IntegerField(null=True, blank=True)
    rss_type = models.TextField(blank=True)
    rss_timelimit = models.TextField(blank=True)
    rss_limit = models.IntegerField(null=True, blank=True)
    rss_included_categories = models.TextField(blank=True)
    rss_excluded_categories = models.TextField(blank=True)
    rss_specification = models.TextField(blank=True)
    rss_allow_html = models.IntegerField(null=True, blank=True)
    rss_author_format = models.TextField(blank=True)
    rss_author_in_title = models.IntegerField(null=True, blank=True)
    rss_word_count = models.TextField(blank=True)
    rss_old_titles = models.IntegerField(null=True, blank=True)
    rss_cache = models.IntegerField(null=True, blank=True)
    fbdefaultpage = models.TextField(blank=True)
    default_sort = models.TextField(blank=True)
    alphauserpointsnumchars = models.IntegerField(null=True, blank=True)
    sef = models.IntegerField(null=True, blank=True)
    sefcats = models.IntegerField(null=True, blank=True)
    sefutf8 = models.IntegerField(null=True, blank=True)
    showimgforguest = models.IntegerField(null=True, blank=True)
    showfileforguest = models.IntegerField(null=True, blank=True)
    pollnboptions = models.IntegerField(null=True, blank=True)
    pollallowvoteone = models.IntegerField(null=True, blank=True)
    pollenabled = models.IntegerField(null=True, blank=True)
    poppollscount = models.IntegerField(null=True, blank=True)
    showpoppollstats = models.IntegerField(null=True, blank=True)
    polltimebtvotes = models.TextField(blank=True)
    pollnbvotesbyuser = models.IntegerField(null=True, blank=True)
    pollresultsuserslist = models.IntegerField(null=True, blank=True)
    maxpersotext = models.IntegerField(null=True, blank=True)
    ordering_system = models.TextField(blank=True)
    post_dateformat = models.TextField(blank=True)
    post_dateformat_hover = models.TextField(blank=True)
    hide_ip = models.IntegerField(null=True, blank=True)
    js_actstr_integration = models.IntegerField(null=True, blank=True)
    imagetypes = models.TextField(blank=True)
    checkmimetypes = models.IntegerField(null=True, blank=True)
    imagemimetypes = models.TextField(blank=True)
    imagequality = models.IntegerField(null=True, blank=True)
    thumbheight = models.IntegerField(null=True, blank=True)
    thumbwidth = models.IntegerField(null=True, blank=True)
    hideuserprofileinfo = models.TextField(blank=True)
    integration_access = models.TextField(blank=True)
    integration_login = models.TextField(blank=True)
    integration_avatar = models.TextField(blank=True)
    integration_profile = models.TextField(blank=True)
    integration_private = models.TextField(blank=True)
    integration_activity = models.TextField(blank=True)
    boxghostmessage = models.IntegerField(null=True, blank=True)
    userdeletetmessage = models.IntegerField(null=True, blank=True)
    latestcategory_in = models.IntegerField(null=True, blank=True)
    topicicons = models.IntegerField(null=True, blank=True)
    onlineusers = models.IntegerField(null=True, blank=True)
    debug = models.IntegerField(null=True, blank=True)
    catsautosubscribed = models.IntegerField(null=True, blank=True)
    showbannedreason = models.IntegerField(null=True, blank=True)
    version_check = models.IntegerField(null=True, blank=True)
    showthankyou = models.IntegerField(null=True, blank=True)
    showpopthankyoustats = models.IntegerField(null=True, blank=True)
    popthankscount = models.IntegerField(null=True, blank=True)
    mod_see_deleted = models.IntegerField(null=True, blank=True)
    bbcode_img_secure = models.TextField(blank=True)
    listcat_show_moderators = models.IntegerField(null=True, blank=True)
    lightbox = models.IntegerField(null=True, blank=True)
    activity_limit = models.IntegerField(null=True, blank=True)
    show_list_time = models.IntegerField(null=True, blank=True)
    show_session_type = models.IntegerField(null=True, blank=True)
    show_session_starttime = models.IntegerField(null=True, blank=True)
    userlist_allowed = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'jos_kunena_config_backup'

class JosKunenaFavorites(models.Model):
    thread = models.IntegerField(unique=True)
    userid = models.IntegerField()
    class Meta:
        db_table = u'jos_kunena_favorites'

class JosKunenaGroups(models.Model):
    id = models.IntegerField(primary_key=True)
    title = models.CharField(max_length=765, blank=True)
    class Meta:
        db_table = u'jos_kunena_groups'

class JosKunenaMessages(models.Model):
    id = models.IntegerField(primary_key=True)
    parent = models.IntegerField(null=True, blank=True)
    thread = models.IntegerField(null=True, blank=True)
    catid = models.IntegerField()
    name = models.TextField(blank=True)
    userid = models.IntegerField()
    email = models.TextField(blank=True)
    subject = models.TextField(blank=True)
    time = models.IntegerField()
    ip = models.CharField(max_length=45, blank=True)
    topic_emoticon = models.IntegerField()
    locked = models.IntegerField()
    hold = models.IntegerField()
    ordering = models.IntegerField(null=True, blank=True)
    hits = models.IntegerField(null=True, blank=True)
    moved = models.IntegerField(null=True, blank=True)
    modified_by = models.IntegerField(null=True, blank=True)
    modified_time = models.IntegerField(null=True, blank=True)
    modified_reason = models.TextField(blank=True)
    class Meta:
        db_table = u'jos_kunena_messages'

class JosKunenaMessagesText(models.Model):
    mesid = models.IntegerField(primary_key=True)
    message = models.TextField()
    class Meta:
        db_table = u'jos_kunena_messages_text'

class JosKunenaModeration(models.Model):
    catid = models.IntegerField(primary_key=True)
    userid = models.IntegerField(primary_key=True)
    future1 = models.IntegerField(null=True, blank=True)
    future2 = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'jos_kunena_moderation'

class JosKunenaPolls(models.Model):
    id = models.IntegerField(primary_key=True)
    title = models.CharField(max_length=300)
    threadid = models.IntegerField()
    polltimetolive = models.DateTimeField(null=True, blank=True)
    class Meta:
        db_table = u'jos_kunena_polls'

class JosKunenaPollsOptions(models.Model):
    id = models.IntegerField(primary_key=True)
    pollid = models.IntegerField(null=True, blank=True)
    text = models.CharField(max_length=300, blank=True)
    votes = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'jos_kunena_polls_options'

class JosKunenaPollsUsers(models.Model):
    pollid = models.IntegerField(unique=True, null=True, blank=True)
    userid = models.IntegerField(unique=True, null=True, blank=True)
    votes = models.IntegerField(null=True, blank=True)
    lasttime = models.DateTimeField()
    lastvote = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'jos_kunena_polls_users'

class JosKunenaRanks(models.Model):
    rank_id = models.IntegerField(primary_key=True)
    rank_title = models.CharField(max_length=765)
    rank_min = models.IntegerField()
    rank_special = models.IntegerField()
    rank_image = models.CharField(max_length=765)
    class Meta:
        db_table = u'jos_kunena_ranks'

class JosKunenaSessions(models.Model):
    userid = models.IntegerField(primary_key=True)
    allowed = models.TextField(blank=True)
    lasttime = models.IntegerField()
    readtopics = models.TextField(blank=True)
    currvisit = models.IntegerField()
    class Meta:
        db_table = u'jos_kunena_sessions'

class JosKunenaSmileys(models.Model):
    id = models.IntegerField(primary_key=True)
    code = models.CharField(max_length=36)
    location = models.CharField(max_length=150)
    greylocation = models.CharField(max_length=180)
    emoticonbar = models.IntegerField()
    class Meta:
        db_table = u'jos_kunena_smileys'

class JosKunenaSubscriptions(models.Model):
    thread = models.IntegerField(unique=True)
    userid = models.IntegerField()
    future1 = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'jos_kunena_subscriptions'

class JosKunenaSubscriptionsCategories(models.Model):
    catid = models.IntegerField(unique=True)
    userid = models.IntegerField()
    future1 = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'jos_kunena_subscriptions_categories'

class JosKunenaThankyou(models.Model):
    postid = models.IntegerField(unique=True)
    userid = models.IntegerField()
    targetuserid = models.IntegerField()
    time = models.DateTimeField()
    class Meta:
        db_table = u'jos_kunena_thankyou'

class JosKunenaUsers(models.Model):
    userid = models.IntegerField(primary_key=True)
    view = models.CharField(max_length=24)
    signature = models.TextField(blank=True)
    moderator = models.IntegerField(null=True, blank=True)
    banned = models.DateTimeField(null=True, blank=True)
    ordering = models.IntegerField(null=True, blank=True)
    posts = models.IntegerField(null=True, blank=True)
    avatar = models.CharField(max_length=150, blank=True)
    karma = models.IntegerField(null=True, blank=True)
    karma_time = models.IntegerField(null=True, blank=True)
    group_id = models.IntegerField(null=True, blank=True)
    uhits = models.IntegerField(null=True, blank=True)
    personaltext = models.TextField(db_column='personalText', blank=True) # Field name made lowercase.
    gender = models.IntegerField()
    birthdate = models.DateField()
    location = models.CharField(max_length=150, blank=True)
    icq = models.CharField(max_length=150, db_column='ICQ', blank=True) # Field name made lowercase.
    aim = models.CharField(max_length=150, db_column='AIM', blank=True) # Field name made lowercase.
    yim = models.CharField(max_length=150, db_column='YIM', blank=True) # Field name made lowercase.
    msn = models.CharField(max_length=150, db_column='MSN', blank=True) # Field name made lowercase.
    skype = models.CharField(max_length=150, db_column='SKYPE', blank=True) # Field name made lowercase.
    twitter = models.CharField(max_length=150, db_column='TWITTER', blank=True) # Field name made lowercase.
    facebook = models.CharField(max_length=150, db_column='FACEBOOK', blank=True) # Field name made lowercase.
    gtalk = models.CharField(max_length=150, db_column='GTALK', blank=True) # Field name made lowercase.
    myspace = models.CharField(max_length=150, db_column='MYSPACE', blank=True) # Field name made lowercase.
    linkedin = models.CharField(max_length=150, db_column='LINKEDIN', blank=True) # Field name made lowercase.
    delicious = models.CharField(max_length=150, db_column='DELICIOUS', blank=True) # Field name made lowercase.
    friendfeed = models.CharField(max_length=150, db_column='FRIENDFEED', blank=True) # Field name made lowercase.
    digg = models.CharField(max_length=150, db_column='DIGG', blank=True) # Field name made lowercase.
    blogspot = models.CharField(max_length=150, db_column='BLOGSPOT', blank=True) # Field name made lowercase.
    flickr = models.CharField(max_length=150, db_column='FLICKR', blank=True) # Field name made lowercase.
    bebo = models.CharField(max_length=150, db_column='BEBO', blank=True) # Field name made lowercase.
    websitename = models.CharField(max_length=150, blank=True)
    websiteurl = models.CharField(max_length=150, blank=True)
    rank = models.IntegerField()
    hideemail = models.IntegerField(db_column='hideEmail') # Field name made lowercase.
    showonline = models.IntegerField(db_column='showOnline') # Field name made lowercase.
    class Meta:
        db_table = u'jos_kunena_users'

class JosKunenaUsersBanned(models.Model):
    id = models.IntegerField(primary_key=True)
    userid = models.IntegerField(null=True, blank=True)
    ip = models.CharField(max_length=384, blank=True)
    blocked = models.IntegerField()
    expiration = models.DateTimeField(null=True, blank=True)
    created_by = models.IntegerField()
    created_time = models.DateTimeField()
    reason_private = models.TextField(blank=True)
    reason_public = models.TextField(blank=True)
    modified_by = models.IntegerField(null=True, blank=True)
    modified_time = models.DateTimeField(null=True, blank=True)
    comments = models.TextField(blank=True)
    params = models.TextField(blank=True)
    class Meta:
        db_table = u'jos_kunena_users_banned'

class JosKunenaVersion(models.Model):
    id = models.IntegerField(primary_key=True)
    version = models.CharField(max_length=60)
    versiondate = models.DateField()
    installdate = models.DateField()
    build = models.CharField(max_length=60)
    versionname = models.CharField(max_length=120, blank=True)
    state = models.TextField()
    class Meta:
        db_table = u'jos_kunena_version'

class JosKunenaWhoisonline(models.Model):
    id = models.IntegerField(primary_key=True)
    userid = models.IntegerField()
    time = models.CharField(max_length=42)
    item = models.IntegerField(null=True, blank=True)
    what = models.CharField(max_length=765, blank=True)
    func = models.CharField(max_length=150, blank=True)
    do = models.CharField(max_length=150, blank=True)
    task = models.CharField(max_length=150, blank=True)
    link = models.TextField(blank=True)
    userip = models.CharField(max_length=60)
    user = models.IntegerField()
    class Meta:
        db_table = u'jos_kunena_whoisonline'

class JosLanguages(models.Model):
    id = models.IntegerField(primary_key=True)
    name = models.CharField(max_length=300)
    active = models.IntegerField()
    iso = models.CharField(max_length=60, blank=True)
    code = models.CharField(max_length=60)
    shortcode = models.CharField(max_length=60, blank=True)
    image = models.CharField(max_length=300, blank=True)
    fallback_code = models.CharField(max_length=60)
    params = models.TextField()
    ordering = models.IntegerField()
    class Meta:
        db_table = u'jos_languages'

class JosMenu(models.Model):
    id = models.IntegerField(primary_key=True)
    menutype = models.CharField(max_length=225, blank=True)
    name = models.CharField(max_length=765, blank=True)
    alias = models.CharField(max_length=765)
    link = models.TextField(blank=True)
    type = models.CharField(max_length=150)
    published = models.IntegerField()
    parent = models.IntegerField()
    componentid = models.IntegerField()
    sublevel = models.IntegerField(null=True, blank=True)
    ordering = models.IntegerField(null=True, blank=True)
    checked_out = models.IntegerField()
    checked_out_time = models.DateTimeField()
    pollid = models.IntegerField()
    browsernav = models.IntegerField(null=True, db_column='browserNav', blank=True) # Field name made lowercase.
    access = models.IntegerField()
    utaccess = models.IntegerField()
    params = models.TextField()
    lft = models.IntegerField()
    rgt = models.IntegerField()
    home = models.IntegerField()
    class Meta:
        db_table = u'jos_menu'

class JosMenuTypes(models.Model):
    id = models.IntegerField(primary_key=True)
    menutype = models.CharField(unique=True, max_length=225)
    title = models.CharField(max_length=765)
    description = models.CharField(max_length=765)
    class Meta:
        db_table = u'jos_menu_types'

class JosMessages(models.Model):
    message_id = models.IntegerField(primary_key=True)
    user_id_from = models.IntegerField()
    user_id_to = models.IntegerField()
    folder_id = models.IntegerField()
    date_time = models.DateTimeField()
    state = models.IntegerField()
    priority = models.IntegerField()
    subject = models.TextField()
    message = models.TextField()
    class Meta:
        db_table = u'jos_messages'

class JosMessagesCfg(models.Model):
    user_id = models.IntegerField(unique=True)
    cfg_name = models.CharField(unique=True, max_length=300)
    cfg_value = models.CharField(max_length=765)
    class Meta:
        db_table = u'jos_messages_cfg'

class JosMessaging(models.Model):
    n = models.IntegerField(primary_key=True)
    idfrom = models.IntegerField(db_column='idFrom') # Field name made lowercase.
    idto = models.IntegerField(db_column='idTo') # Field name made lowercase.
    subject = models.CharField(max_length=300)
    message = models.TextField()
    seen = models.IntegerField()
    date = models.DateTimeField()
    class Meta:
        db_table = u'jos_messaging'

class JosMessagingGroups(models.Model):
    n = models.IntegerField()
    groupname = models.CharField(max_length=225, db_column='groupName') # Field name made lowercase.
    messagelimit = models.IntegerField(db_column='messageLimit') # Field name made lowercase.
    class Meta:
        db_table = u'jos_messaging_groups'

class JosMigrationBacklinks(models.Model):
    itemid = models.IntegerField(primary_key=True)
    name = models.CharField(max_length=300)
    url = models.TextField()
    sefurl = models.TextField()
    newurl = models.TextField()
    class Meta:
        db_table = u'jos_migration_backlinks'

class JosModules(models.Model):
    id = models.IntegerField(primary_key=True)
    title = models.TextField()
    content = models.TextField()
    ordering = models.IntegerField()
    position = models.CharField(max_length=150, blank=True)
    checked_out = models.IntegerField()
    checked_out_time = models.DateTimeField()
    published = models.IntegerField()
    module = models.CharField(max_length=150, blank=True)
    numnews = models.IntegerField()
    access = models.IntegerField()
    showtitle = models.IntegerField()
    params = models.TextField()
    iscore = models.IntegerField()
    client_id = models.IntegerField()
    control = models.TextField()
    class Meta:
        db_table = u'jos_modules'

class JosModulesMenu(models.Model):
    moduleid = models.IntegerField(primary_key=True)
    menuid = models.IntegerField(primary_key=True)
    class Meta:
        db_table = u'jos_modules_menu'

class JosMuscolAlbums(models.Model):
    id = models.IntegerField(primary_key=True)
    name = models.CharField(max_length=765)
    artist_id = models.IntegerField()
    year = models.TextField() # This field type is a guess.
    month = models.IntegerField()
    edition_year = models.TextField() # This field type is a guess.
    edition_month = models.IntegerField()
    edition_country = models.CharField(max_length=381)
    edition_details = models.CharField(max_length=765)
    genre_id = models.IntegerField()
    catalog_number = models.CharField(max_length=93)
    label = models.CharField(max_length=381)
    length = models.CharField(max_length=27)
    format_id = models.IntegerField()
    image = models.CharField(max_length=765)
    ndisc = models.IntegerField()
    types = models.CharField(max_length=93)
    review = models.TextField()
    name2 = models.CharField(max_length=765)
    artist2 = models.CharField(max_length=765)
    subtitle = models.CharField(max_length=765)
    subartist = models.CharField(max_length=765)
    fisic = models.CharField(max_length=12)
    points = models.IntegerField()
    added = models.DateTimeField()
    modified = models.DateTimeField()
    price = models.DecimalField(max_digits=8, decimal_places=2)
    tags = models.CharField(max_length=189)
    part_of_set = models.IntegerField()
    show_separately = models.CharField(max_length=3)
    params = models.TextField()
    keywords = models.CharField(max_length=6144)
    user_id = models.IntegerField()
    class Meta:
        db_table = u'jos_muscol_albums'

class JosMuscolArtists(models.Model):
    id = models.IntegerField(primary_key=True)
    artist_name = models.CharField(max_length=765)
    image = models.CharField(max_length=381)
    review = models.TextField()
    letter = models.CharField(max_length=3)
    class_name = models.CharField(max_length=765)
    related = models.CharField(max_length=189)
    keywords = models.CharField(max_length=1536)
    added = models.DateTimeField()
    class Meta:
        db_table = u'jos_muscol_artists'

class JosMuscolComments(models.Model):
    id = models.IntegerField(primary_key=True)
    album_id = models.IntegerField()
    user_id = models.IntegerField()
    comment = models.TextField()
    date = models.DateTimeField()
    class Meta:
        db_table = u'jos_muscol_comments'

class JosMuscolFormat(models.Model):
    id = models.IntegerField(primary_key=True)
    format_name = models.CharField(max_length=765)
    display_group = models.IntegerField()
    order_num = models.IntegerField()
    icon = models.CharField(max_length=765)
    class Meta:
        db_table = u'jos_muscol_format'

class JosMuscolGenres(models.Model):
    id = models.IntegerField(primary_key=True)
    genre_name = models.CharField(max_length=765)
    parents = models.CharField(max_length=189)
    class Meta:
        db_table = u'jos_muscol_genres'

class JosMuscolRatings(models.Model):
    id = models.IntegerField(primary_key=True)
    album_id = models.IntegerField()
    user_id = models.IntegerField()
    date = models.DateTimeField()
    points = models.IntegerField()
    class Meta:
        db_table = u'jos_muscol_ratings'

class JosMuscolSongs(models.Model):
    id = models.IntegerField(primary_key=True)
    album_id = models.IntegerField()
    num = models.IntegerField()
    disc_num = models.IntegerField()
    length = models.CharField(max_length=24)
    name = models.CharField(max_length=765)
    lyrics = models.TextField()
    artist_id = models.IntegerField()
    composer_id = models.IntegerField()
    filename = models.CharField(max_length=765)
    extension = models.CharField(max_length=15)
    added = models.DateTimeField()
    review = models.TextField()
    songwriters = models.TextField()
    chords = models.TextField()
    genre_id = models.IntegerField()
    class Meta:
        db_table = u'jos_muscol_songs'

class JosMuscolTags(models.Model):
    id = models.IntegerField(primary_key=True)
    tag_name = models.CharField(max_length=765)
    icon = models.CharField(max_length=765)
    class Meta:
        db_table = u'jos_muscol_tags'

class JosMuscolType(models.Model):
    id = models.IntegerField(primary_key=True)
    type_name = models.CharField(max_length=381)
    class Meta:
        db_table = u'jos_muscol_type'

class JosNewsfeeds(models.Model):
    catid = models.IntegerField()
    id = models.IntegerField(primary_key=True)
    name = models.TextField()
    alias = models.CharField(max_length=765)
    link = models.TextField()
    filename = models.CharField(max_length=600, blank=True)
    published = models.IntegerField()
    numarticles = models.IntegerField()
    cache_time = models.IntegerField()
    checked_out = models.IntegerField()
    checked_out_time = models.DateTimeField()
    ordering = models.IntegerField()
    rtl = models.IntegerField()
    class Meta:
        db_table = u'jos_newsfeeds'

class JosNinjarsssyndicator(models.Model):
    id = models.IntegerField(primary_key=True)
    msg = models.CharField(max_length=300, blank=True)
    defaulttype = models.CharField(max_length=12, db_column='defaultType', blank=True) # Field name made lowercase.
    count = models.CharField(max_length=12, blank=True)
    orderby = models.CharField(max_length=30, blank=True)
    numwords = models.IntegerField(null=True, db_column='numWords', blank=True) # Field name made lowercase.
    cache = models.IntegerField(null=True, blank=True)
    imgurl = models.CharField(max_length=300, db_column='imgUrl', blank=True) # Field name made lowercase.
    renderauthorformat = models.CharField(max_length=30, db_column='renderAuthorFormat', blank=True) # Field name made lowercase.
    renderhtml = models.IntegerField(null=True, db_column='renderHTML', blank=True) # Field name made lowercase.
    fpitemsonly = models.IntegerField(null=True, db_column='FPItemsOnly', blank=True) # Field name made lowercase.
    description = models.TextField(blank=True)
    class Meta:
        db_table = u'jos_ninjarsssyndicator'

class JosNinjarsssyndicatorFeeds(models.Model):
    id = models.IntegerField(primary_key=True)
    feed_name = models.CharField(max_length=450, blank=True)
    feed_description = models.TextField(blank=True)
    feed_type = models.CharField(max_length=30, blank=True)
    feed_cache = models.IntegerField(null=True, blank=True)
    feed_imgurl = models.CharField(max_length=300, db_column='feed_imgUrl', blank=True) # Field name made lowercase.
    feed_button = models.CharField(max_length=300, blank=True)
    feed_renderauthorformat = models.CharField(max_length=30, db_column='feed_renderAuthorFormat', blank=True) # Field name made lowercase.
    feed_renderhtml = models.IntegerField(null=True, db_column='feed_renderHTML', blank=True) # Field name made lowercase.
    feed_renderimages = models.IntegerField(db_column='feed_renderImages') # Field name made lowercase.
    msg_count = models.CharField(max_length=12, blank=True)
    msg_orderby = models.CharField(max_length=30, blank=True)
    msg_numwords = models.IntegerField(null=True, db_column='msg_numWords', blank=True) # Field name made lowercase.
    msg_fpitemsonly = models.IntegerField(null=True, db_column='msg_FPItemsOnly', blank=True) # Field name made lowercase.
    msg_sectlist = models.CharField(max_length=150, blank=True)
    msg_excatlist = models.CharField(max_length=300, blank=True)
    msg_includecats = models.IntegerField(null=True, db_column='msg_includeCats', blank=True) # Field name made lowercase.
    msg_fulltext = models.IntegerField(null=True, blank=True)
    msg_exitems = models.CharField(max_length=750, blank=True)
    msg_includetags = models.CharField(max_length=750, blank=True)
    msg_contentplugins = models.IntegerField(null=True, db_column='msg_contentPlugins', blank=True) # Field name made lowercase.
    published = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'jos_ninjarsssyndicator_feeds'

class JosPermissions(models.Model):
    id = models.IntegerField(primary_key=True)
    role = models.CharField(max_length=180)
    control = models.IntegerField()
    action = models.CharField(max_length=180)
    subject_type = models.CharField(max_length=180)
    subject_id = models.TextField()
    system = models.IntegerField()
    class Meta:
        db_table = u'jos_permissions'

class JosPlugins(models.Model):
    id = models.IntegerField(primary_key=True)
    name = models.CharField(max_length=300)
    element = models.CharField(max_length=300)
    folder = models.CharField(max_length=300)
    access = models.IntegerField()
    ordering = models.IntegerField()
    published = models.IntegerField()
    iscore = models.IntegerField()
    client_id = models.IntegerField()
    checked_out = models.IntegerField()
    checked_out_time = models.DateTimeField()
    params = models.TextField()
    class Meta:
        db_table = u'jos_plugins'

class JosPollData(models.Model):
    id = models.IntegerField(primary_key=True)
    pollid = models.IntegerField()
    text = models.TextField()
    hits = models.IntegerField()
    class Meta:
        db_table = u'jos_poll_data'

class JosPollDate(models.Model):
    id = models.BigIntegerField(primary_key=True)
    date = models.DateTimeField()
    vote_id = models.IntegerField()
    poll_id = models.IntegerField()
    class Meta:
        db_table = u'jos_poll_date'

class JosPollMenu(models.Model):
    pollid = models.IntegerField(primary_key=True)
    menuid = models.IntegerField(primary_key=True)
    class Meta:
        db_table = u'jos_poll_menu'

class JosPolls(models.Model):
    id = models.IntegerField(primary_key=True)
    title = models.CharField(max_length=765)
    alias = models.CharField(max_length=765)
    voters = models.IntegerField()
    checked_out = models.IntegerField()
    checked_out_time = models.DateTimeField()
    published = models.IntegerField()
    access = models.IntegerField()
    lag = models.IntegerField()
    class Meta:
        db_table = u'jos_polls'

class JosQcontactsConfig(models.Model):
    id = models.IntegerField(primary_key=True)
    params = models.TextField()
    class Meta:
        db_table = u'jos_qcontacts_config'

class JosQcontactsDetails(models.Model):
    id = models.IntegerField(primary_key=True)
    name = models.TextField()
    alias = models.CharField(max_length=765)
    con_position = models.TextField(blank=True)
    address = models.TextField(blank=True)
    suburb = models.TextField(blank=True)
    state = models.TextField(blank=True)
    country = models.TextField(blank=True)
    postcode = models.CharField(max_length=765, blank=True)
    telephone = models.CharField(max_length=765, blank=True)
    fax = models.CharField(max_length=765, blank=True)
    misc = models.TextField(blank=True)
    image = models.CharField(max_length=765, blank=True)
    imagepos = models.CharField(max_length=180, blank=True)
    email_to = models.CharField(max_length=765, blank=True)
    default_con = models.IntegerField()
    published = models.IntegerField()
    checked_out = models.IntegerField()
    checked_out_time = models.DateTimeField()
    ordering = models.IntegerField()
    params = models.TextField()
    user_id = models.IntegerField()
    catid = models.IntegerField()
    access = models.IntegerField()
    mobile = models.CharField(max_length=765)
    webpage = models.CharField(max_length=765)
    skype = models.CharField(max_length=765)
    yahoo_msg = models.CharField(max_length=765)
    class Meta:
        db_table = u'jos_qcontacts_details'

class JosRokdownloads(models.Model):
    id = models.IntegerField(primary_key=True)
    name = models.TextField()
    displayname = models.TextField()
    path = models.TextField()
    folder = models.IntegerField()
    filesize = models.BigIntegerField()
    introtext = models.TextField(blank=True)
    fulltext = models.TextField(blank=True)
    thumbnail = models.CharField(max_length=765, blank=True)
    access = models.IntegerField()
    params = models.TextField(blank=True)
    downloads = models.IntegerField()
    published = models.IntegerField()
    lft = models.IntegerField()
    rgt = models.IntegerField()
    created_time = models.DateTimeField()
    created_by = models.IntegerField()
    modified_time = models.DateTimeField()
    modified_by = models.IntegerField()
    checked_out_time = models.DateTimeField()
    checked_out = models.IntegerField()
    metadata = models.TextField(blank=True)
    metadesc = models.TextField(blank=True)
    metakey = models.TextField(blank=True)
    class Meta:
        db_table = u'jos_rokdownloads'

class JosRokversions(models.Model):
    product = models.CharField(max_length=765)
    version = models.CharField(max_length=765)
    class Meta:
        db_table = u'jos_rokversions'

class JosSections(models.Model):
    id = models.IntegerField(primary_key=True)
    title = models.CharField(max_length=765)
    name = models.CharField(max_length=765)
    alias = models.CharField(max_length=765)
    image = models.TextField()
    scope = models.CharField(max_length=150)
    image_position = models.CharField(max_length=90)
    description = models.TextField()
    published = models.IntegerField()
    checked_out = models.IntegerField()
    checked_out_time = models.DateTimeField()
    ordering = models.IntegerField()
    access = models.IntegerField()
    count = models.IntegerField()
    params = models.TextField()
    class Meta:
        db_table = u'jos_sections'

class JosSefSmCache(models.Model):
    id = models.IntegerField(primary_key=True)
    menu_id = models.IntegerField()
    maptype = models.CharField(max_length=90)
    lang = models.CharField(max_length=90)
    gid = models.IntegerField()
    lastmod = models.DateTimeField()
    items = models.IntegerField()
    class Meta:
        db_table = u'jos_sef_sm_cache'

class JosSefSmCacheItems(models.Model):
    id = models.IntegerField()
    ordering = models.IntegerField()
    name = models.CharField(max_length=300)
    link = models.CharField(max_length=765)
    image = models.CharField(max_length=150)
    icon_path = models.CharField(max_length=300)
    level = models.IntegerField()
    lastmod = models.CharField(max_length=60)
    changefreq = models.CharField(max_length=30)
    priority = models.CharField(max_length=9)
    description = models.TextField()
    class Meta:
        db_table = u'jos_sef_sm_cache_items'

class JosSefSmMenu(models.Model):
    menu_id = models.IntegerField()
    published = models.IntegerField()
    integrator = models.IntegerField()
    integrator_id = models.CharField(max_length=30)
    ordering = models.IntegerField()
    params = models.TextField()
    ping_enabled = models.IntegerField()
    class Meta:
        db_table = u'jos_sef_sm_menu'

class JosSefSmMenus(models.Model):
    id = models.IntegerField(primary_key=True)
    name = models.CharField(max_length=300)
    ordering = models.IntegerField()
    published = models.IntegerField()
    params = models.TextField()
    class Meta:
        db_table = u'jos_sef_sm_menus'

class JosSefSmPingback(models.Model):
    id = models.IntegerField(primary_key=True)
    ping_host = models.CharField(unique=True, max_length=300)
    last_ping_date = models.DateTimeField()
    log_position = models.IntegerField()
    class Meta:
        db_table = u'jos_sef_sm_pingback'

class JosSefSmPingbackLog(models.Model):
    id = models.IntegerField(primary_key=True)
    pingback_id = models.IntegerField(primary_key=True)
    ping_date = models.DateTimeField()
    name = models.CharField(max_length=300)
    url = models.CharField(max_length=765)
    flerror = models.CharField(max_length=30)
    message = models.CharField(max_length=300)
    session_log = models.TextField()
    class Meta:
        db_table = u'jos_sef_sm_pingback_log'

class JosSefSmPingbackMenu(models.Model):
    menu_id = models.IntegerField()
    pingback_id = models.IntegerField()
    last_date = models.DateTimeField()
    class Meta:
        db_table = u'jos_sef_sm_pingback_menu'

class JosSefSmPingbackStack(models.Model):
    id = models.IntegerField(primary_key=True)
    menu_id = models.IntegerField()
    name = models.CharField(max_length=300)
    url = models.CharField(max_length=765)
    url_md5 = models.CharField(max_length=60, primary_key=True)
    modified = models.DateTimeField()
    added = models.DateTimeField()
    class Meta:
        db_table = u'jos_sef_sm_pingback_stack'

class JosSefSmPlugins(models.Model):
    id = models.IntegerField(primary_key=True)
    name = models.CharField(max_length=300)
    element = models.CharField(max_length=300)
    class_field = models.CharField(max_length=300, db_column='class') # Field renamed because it was a Python reserved word.
    type = models.CharField(max_length=300)
    access = models.IntegerField()
    published = models.IntegerField()
    params = models.TextField()
    class Meta:
        db_table = u'jos_sef_sm_plugins'

class JosSefSmSettings(models.Model):
    variable = models.CharField(max_length=300, primary_key=True)
    value = models.TextField(blank=True)
    description = models.TextField(blank=True)
    class Meta:
        db_table = u'jos_sef_sm_settings'

class JosSembookings(models.Model):
    id = models.IntegerField(primary_key=True)
    name = models.TextField()
    email = models.TextField()
    sid = models.IntegerField()
    semid = models.IntegerField()
    userid = models.IntegerField()
    certificated = models.IntegerField()
    bookingdate = models.DateTimeField()
    updated = models.DateTimeField()
    grade = models.IntegerField()
    comment = models.CharField(max_length=600)
    paid = models.IntegerField()
    nrbooked = models.IntegerField()
    zusatz1 = models.TextField()
    zusatz2 = models.TextField()
    zusatz3 = models.TextField()
    zusatz4 = models.TextField()
    zusatz5 = models.TextField()
    zusatz6 = models.TextField()
    zusatz7 = models.TextField()
    zusatz8 = models.TextField()
    zusatz9 = models.TextField()
    zusatz10 = models.TextField()
    zusatz11 = models.TextField()
    zusatz12 = models.TextField()
    zusatz13 = models.TextField()
    zusatz14 = models.TextField()
    zusatz15 = models.TextField()
    zusatz16 = models.TextField()
    zusatz17 = models.TextField()
    zusatz18 = models.TextField()
    zusatz19 = models.TextField()
    zusatz20 = models.TextField()
    class Meta:
        db_table = u'jos_sembookings'

class JosSeminar(models.Model):
    id = models.IntegerField(primary_key=True)
    sid = models.IntegerField()
    semnum = models.CharField(max_length=300)
    catid = models.IntegerField()
    title = models.CharField(max_length=765)
    target = models.CharField(max_length=765)
    shortdesc = models.TextField()
    description = models.TextField()
    place = models.TextField()
    teacher = models.CharField(max_length=360)
    fees = models.CharField(max_length=30)
    maxpupil = models.IntegerField()
    bookedpupil = models.IntegerField()
    stopbooking = models.IntegerField()
    cancelled = models.IntegerField()
    begin = models.DateTimeField()
    end = models.DateTimeField()
    booked = models.DateTimeField()
    showbegin = models.IntegerField()
    showend = models.IntegerField()
    showbooked = models.IntegerField()
    checked_out = models.IntegerField()
    checked_out_time = models.DateTimeField()
    ordering = models.IntegerField()
    published = models.IntegerField()
    updated = models.DateTimeField()
    publishdate = models.DateTimeField()
    publisher = models.IntegerField()
    access = models.IntegerField()
    hits = models.IntegerField()
    grade = models.IntegerField()
    certificated = models.IntegerField()
    paid = models.IntegerField()
    gmaploc = models.CharField(max_length=360)
    nrbooked = models.IntegerField()
    pattern = models.CharField(max_length=300)
    zusatz1 = models.TextField()
    zusatz2 = models.TextField()
    zusatz3 = models.TextField()
    zusatz4 = models.TextField()
    zusatz5 = models.TextField()
    zusatz6 = models.TextField()
    zusatz7 = models.TextField()
    zusatz8 = models.TextField()
    zusatz9 = models.TextField()
    zusatz10 = models.TextField()
    zusatz11 = models.TextField()
    zusatz12 = models.TextField()
    zusatz13 = models.TextField()
    zusatz14 = models.TextField()
    zusatz15 = models.TextField()
    zusatz16 = models.TextField()
    zusatz17 = models.TextField()
    zusatz18 = models.TextField()
    zusatz19 = models.TextField()
    zusatz20 = models.TextField()
    zusatz1hint = models.TextField()
    zusatz2hint = models.TextField()
    zusatz3hint = models.TextField()
    zusatz4hint = models.TextField()
    zusatz5hint = models.TextField()
    zusatz6hint = models.TextField()
    zusatz7hint = models.TextField()
    zusatz8hint = models.TextField()
    zusatz9hint = models.TextField()
    zusatz10hint = models.TextField()
    zusatz11hint = models.TextField()
    zusatz12hint = models.TextField()
    zusatz13hint = models.TextField()
    zusatz14hint = models.TextField()
    zusatz15hint = models.TextField()
    zusatz16hint = models.TextField()
    zusatz17hint = models.TextField()
    zusatz18hint = models.TextField()
    zusatz19hint = models.TextField()
    zusatz20hint = models.TextField()
    zusatz1show = models.IntegerField()
    zusatz2show = models.IntegerField()
    zusatz3show = models.IntegerField()
    zusatz4show = models.IntegerField()
    zusatz5show = models.IntegerField()
    zusatz6show = models.IntegerField()
    zusatz7show = models.IntegerField()
    zusatz8show = models.IntegerField()
    zusatz9show = models.IntegerField()
    zusatz10show = models.IntegerField()
    zusatz11show = models.IntegerField()
    zusatz12show = models.IntegerField()
    zusatz13show = models.IntegerField()
    zusatz14show = models.IntegerField()
    zusatz15show = models.IntegerField()
    zusatz16show = models.IntegerField()
    zusatz17show = models.IntegerField()
    zusatz18show = models.IntegerField()
    zusatz19show = models.IntegerField()
    zusatz20show = models.IntegerField()
    image = models.CharField(max_length=360)
    file1 = models.CharField(max_length=300)
    file2 = models.CharField(max_length=300)
    file3 = models.CharField(max_length=300)
    file4 = models.CharField(max_length=300)
    file5 = models.CharField(max_length=300)
    file1desc = models.CharField(max_length=765)
    file2desc = models.CharField(max_length=765)
    file3desc = models.CharField(max_length=765)
    file4desc = models.CharField(max_length=765)
    file5desc = models.CharField(max_length=765)
    file1down = models.IntegerField()
    file2down = models.IntegerField()
    file3down = models.IntegerField()
    file4down = models.IntegerField()
    file5down = models.IntegerField()
    file1code = models.TextField()
    file2code = models.TextField()
    file3code = models.TextField()
    file4code = models.TextField()
    file5code = models.TextField()
    class Meta:
        db_table = u'jos_seminar'

class JosSemnumber(models.Model):
    id = models.IntegerField(primary_key=True)
    number = models.IntegerField()
    year = models.IntegerField()
    class Meta:
        db_table = u'jos_semnumber'

class JosSession(models.Model):
    username = models.CharField(max_length=450, blank=True)
    time = models.CharField(max_length=42, blank=True)
    session_id = models.CharField(max_length=600, primary_key=True)
    guest = models.IntegerField(null=True, blank=True)
    userid = models.IntegerField(null=True, blank=True)
    usertype = models.CharField(max_length=150, blank=True)
    gid = models.IntegerField()
    client_id = models.IntegerField()
    data = models.TextField(blank=True)
    class Meta:
        db_table = u'jos_session'

class JosSledovania(models.Model):
    id = models.IntegerField(primary_key=True)
    user_id = models.IntegerField()
    last_date = models.DateTimeField()
    content_id = models.IntegerField()
    active = models.CharField(max_length=3)
    class Meta:
        db_table = u'jos_sledovania'

class JosSmartformerData(models.Model):
    id = models.IntegerField(primary_key=True)
    form_id = models.IntegerField()
    datetime = models.DateTimeField()
    data = models.TextField()
    rand = models.CharField(max_length=60)
    hash = models.CharField(max_length=96)
    status = models.IntegerField()
    class Meta:
        db_table = u'jos_smartformer_data'

class JosSmartformerForms(models.Model):
    id = models.IntegerField(primary_key=True)
    name = models.TextField()
    status = models.IntegerField()
    data1 = models.TextField()
    data2 = models.TextField()
    data3 = models.TextField()
    data4 = models.TextField()
    data5 = models.TextField()
    data6 = models.TextField()
    data7 = models.TextField()
    data8 = models.TextField()
    data9 = models.TextField()
    data10 = models.TextField()
    element_to_page = models.TextField()
    checked_out = models.IntegerField()
    checked_out_time = models.DateTimeField()
    editor = models.CharField(max_length=150)
    groups = models.TextField()
    css_list = models.TextField()
    js_list = models.TextField()
    php_list = models.TextField()
    filter = models.TextField()
    enable_notif = models.IntegerField()
    email_format = models.IntegerField()
    fromname = models.CharField(max_length=765)
    fromemail = models.CharField(max_length=765)
    subject = models.CharField(max_length=765)
    cc = models.CharField(max_length=765)
    bcc = models.CharField(max_length=765)
    message = models.TextField()
    admin_template = models.TextField()
    class Meta:
        db_table = u'jos_smartformer_forms'

class JosSmartformerSettings(models.Model):
    id = models.IntegerField(primary_key=True)
    type = models.IntegerField()
    variable = models.CharField(max_length=150)
    default = models.CharField(max_length=765)
    value = models.CharField(max_length=765)
    class Meta:
        db_table = u'jos_smartformer_settings'

class JosSobi2Cache(models.Model):
    validtime = models.IntegerField()
    task = models.CharField(max_length=60)
    sid = models.IntegerField()
    cid = models.IntegerField()
    uid = models.IntegerField()
    limitstart = models.IntegerField()
    limitall = models.IntegerField()
    itemid = models.IntegerField(db_column='Itemid') # Field name made lowercase.
    section = models.CharField(max_length=150)
    params = models.TextField()
    html = models.TextField()
    opt = models.TextField()
    slang = models.CharField(max_length=150)
    schecksum = models.CharField(max_length=150)
    class Meta:
        db_table = u'jos_sobi2_cache'

class JosSobi2CatItemsRelations(models.Model):
    catid = models.IntegerField()
    itemid = models.IntegerField()
    ordering = models.IntegerField()
    class Meta:
        db_table = u'jos_sobi2_cat_items_relations'

class JosSobi2Categories(models.Model):
    catid = models.IntegerField(primary_key=True)
    name = models.CharField(max_length=300, blank=True)
    image = models.CharField(max_length=300, blank=True)
    image_position = models.CharField(max_length=30, blank=True)
    description = models.TextField(blank=True)
    introtext = models.CharField(max_length=300, blank=True)
    published = models.IntegerField(null=True, blank=True)
    checked_out = models.IntegerField(null=True, blank=True)
    checked_out_time = models.DateTimeField(null=True, blank=True)
    ordering = models.IntegerField(null=True, blank=True)
    access = models.IntegerField(null=True, blank=True)
    count = models.IntegerField(null=True, blank=True)
    params = models.TextField(blank=True)
    icon = models.CharField(max_length=300)
    class Meta:
        db_table = u'jos_sobi2_categories'

class JosSobi2CatsRelations(models.Model):
    catid = models.IntegerField()
    parentid = models.IntegerField()
    class Meta:
        db_table = u'jos_sobi2_cats_relations'

class JosSobi2Cobj(models.Model):
    atime = models.IntegerField()
    sid = models.IntegerField()
    cid = models.IntegerField()
    svars = models.TextField()
    oid = models.IntegerField(primary_key=True)
    cl = models.IntegerField()
    params = models.TextField()
    slang = models.CharField(max_length=150)
    schecksum = models.CharField(max_length=150)
    class Meta:
        db_table = u'jos_sobi2_cobj'

class JosSobi2Config(models.Model):
    configkey = models.CharField(max_length=300, primary_key=True, db_column='configKey') # Field name made lowercase.
    configvalue = models.TextField(db_column='configValue', blank=True) # Field name made lowercase.
    sobi2section = models.CharField(max_length=300, primary_key=True, db_column='sobi2Section') # Field name made lowercase.
    description = models.TextField(blank=True)
    class Meta:
        db_table = u'jos_sobi2_config'

class JosSobi2Fields(models.Model):
    fieldid = models.IntegerField(primary_key=True)
    fieldtype = models.IntegerField(null=True, db_column='fieldType', blank=True) # Field name made lowercase.
    wysiwyg = models.IntegerField(null=True, blank=True)
    fielddescription = models.TextField(db_column='fieldDescription', blank=True) # Field name made lowercase.
    explanation = models.TextField(blank=True)
    is_free = models.IntegerField(null=True, blank=True)
    payment = models.FloatField(null=True, blank=True)
    fieldchars = models.IntegerField(null=True, db_column='fieldChars', blank=True) # Field name made lowercase.
    fieldrows = models.IntegerField(null=True, db_column='fieldRows', blank=True) # Field name made lowercase.
    fieldcolumns = models.IntegerField(null=True, db_column='fieldColumns', blank=True) # Field name made lowercase.
    preferred_size = models.IntegerField(null=True, blank=True)
    cssclass = models.TextField(db_column='CSSclass', blank=True) # Field name made lowercase.
    enabled = models.IntegerField(null=True, blank=True)
    iseditable = models.IntegerField(null=True, db_column='isEditable', blank=True) # Field name made lowercase.
    is_required = models.IntegerField(null=True, blank=True)
    in_promoted = models.IntegerField(null=True, blank=True)
    in_vcard = models.IntegerField(null=True, blank=True)
    in_details = models.IntegerField()
    position = models.IntegerField(null=True, blank=True)
    in_search = models.IntegerField()
    with_label = models.IntegerField()
    in_newline = models.IntegerField()
    isurl = models.IntegerField(db_column='isUrl') # Field name made lowercase.
    checked_out = models.IntegerField()
    checked_out_time = models.DateTimeField()
    displayed = models.IntegerField()
    class Meta:
        db_table = u'jos_sobi2_fields'

class JosSobi2FieldsData(models.Model):
    id = models.IntegerField(primary_key=True)
    fieldid = models.IntegerField(null=True, blank=True)
    data_txt = models.TextField(blank=True)
    data_bool = models.IntegerField(null=True, blank=True)
    data_int = models.IntegerField(null=True, blank=True)
    data_float = models.FloatField(null=True, blank=True)
    data_char = models.CharField(max_length=765)
    itemid = models.IntegerField(null=True, blank=True)
    expiration = models.DateTimeField(null=True, blank=True)
    class Meta:
        db_table = u'jos_sobi2_fields_data'

class JosSobi2Item(models.Model):
    itemid = models.IntegerField(primary_key=True)
    title = models.CharField(max_length=765, blank=True)
    hits = models.IntegerField(null=True, blank=True)
    visits = models.IntegerField(null=True, blank=True)
    published = models.IntegerField(null=True, blank=True)
    confirm = models.IntegerField()
    approved = models.IntegerField()
    archived = models.IntegerField(null=True, blank=True)
    publish_up = models.DateTimeField(null=True, blank=True)
    publish_down = models.DateTimeField(null=True, blank=True)
    checked_out = models.IntegerField(null=True, blank=True)
    checked_out_time = models.DateTimeField()
    ordering = models.IntegerField(null=True, blank=True)
    owner = models.IntegerField()
    icon = models.CharField(max_length=600)
    image = models.CharField(max_length=600)
    background = models.CharField(max_length=300, blank=True)
    options = models.TextField(blank=True)
    params = models.TextField(blank=True)
    ip = models.CharField(max_length=45)
    last_update = models.DateTimeField()
    updating_user = models.IntegerField()
    updating_ip = models.CharField(max_length=45)
    metakey = models.CharField(max_length=600)
    metadesc = models.TextField()
    class Meta:
        db_table = u'jos_sobi2_item'

class JosSobi2Language(models.Model):
    langkey = models.CharField(max_length=150, primary_key=True, db_column='langKey') # Field name made lowercase.
    langvalue = models.CharField(max_length=765, db_column='langValue', blank=True) # Field name made lowercase.
    description = models.TextField(blank=True)
    sobi2section = models.CharField(max_length=30, db_column='sobi2Section') # Field name made lowercase.
    fieldid = models.IntegerField(null=True, blank=True)
    sobi2lang = models.CharField(max_length=150, primary_key=True, db_column='sobi2Lang') # Field name made lowercase.
    class Meta:
        db_table = u'jos_sobi2_language'

class JosSobi2Payments(models.Model):
    pid = models.IntegerField(primary_key=True)
    sid = models.IntegerField()
    reference = models.CharField(max_length=765)
    amount = models.FloatField()
    date = models.DateTimeField()
    payed = models.IntegerField()
    payed_date = models.DateTimeField()
    email_send = models.DateTimeField()
    fid = models.IntegerField()
    params = models.TextField(blank=True)
    class Meta:
        db_table = u'jos_sobi2_payments'

class JosSobi2PluginBackupConfig(models.Model):
    configkey = models.CharField(max_length=300, primary_key=True, db_column='configKey') # Field name made lowercase.
    configvalue = models.TextField(db_column='configValue', blank=True) # Field name made lowercase.
    class Meta:
        db_table = u'jos_sobi2_plugin_backup_config'

class JosSobi2PluginBackupSessions(models.Model):
    btime = models.IntegerField(primary_key=True, db_column='bTime') # Field name made lowercase.
    bsettings = models.TextField(db_column='bSettings', blank=True) # Field name made lowercase.
    class Meta:
        db_table = u'jos_sobi2_plugin_backup_sessions'

class JosSobi2Plugins(models.Model):
    id = models.IntegerField(primary_key=True)
    name_id = models.CharField(max_length=60)
    version = models.CharField(max_length=30)
    name = models.CharField(max_length=150)
    in_details = models.IntegerField(null=True, blank=True)
    in_listing = models.IntegerField(null=True, blank=True)
    description = models.TextField(blank=True)
    author = models.CharField(max_length=150, blank=True)
    author_email = models.CharField(max_length=150)
    author_url = models.CharField(max_length=150)
    position = models.IntegerField(null=True, blank=True)
    init_file = models.CharField(max_length=150, blank=True)
    options = models.CharField(max_length=150, blank=True)
    params = models.TextField(blank=True)
    list_pos = models.IntegerField(null=True, blank=True)
    dv_pos = models.IntegerField(null=True, blank=True)
    form_pos = models.IntegerField(null=True, blank=True)
    enabled = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'jos_sobi2_plugins'

class JosSobi2PluginsTables(models.Model):
    pid = models.IntegerField(primary_key=True)
    table = models.CharField(max_length=150, primary_key=True)
    class Meta:
        db_table = u'jos_sobi2_plugins_tables'

class JosStatsAgents(models.Model):
    agent = models.CharField(max_length=765)
    type = models.IntegerField()
    hits = models.IntegerField()
    class Meta:
        db_table = u'jos_stats_agents'

class JosTemplatesMenu(models.Model):
    template = models.CharField(max_length=765, primary_key=True)
    menuid = models.IntegerField(primary_key=True)
    client_id = models.IntegerField(primary_key=True)
    class Meta:
        db_table = u'jos_templates_menu'

class JosUddeim(models.Model):
    id = models.IntegerField(primary_key=True)
    replyid = models.IntegerField()
    fromid = models.IntegerField()
    toid = models.IntegerField()
    message = models.TextField()
    datum = models.IntegerField(null=True, blank=True)
    toread = models.IntegerField()
    totrash = models.IntegerField()
    totrashdate = models.IntegerField(null=True, blank=True)
    totrashoutbox = models.IntegerField()
    totrashdateoutbox = models.IntegerField(null=True, blank=True)
    expires = models.IntegerField()
    disablereply = models.IntegerField()
    systemmessage = models.CharField(max_length=180, blank=True)
    archived = models.IntegerField()
    cryptmode = models.IntegerField()
    flagged = models.IntegerField()
    crypthash = models.CharField(max_length=96, blank=True)
    publicname = models.TextField(blank=True)
    publicemail = models.TextField(blank=True)
    class Meta:
        db_table = u'jos_uddeim'

class JosUddeimAttachments(models.Model):
    id = models.IntegerField(primary_key=True)
    mid = models.IntegerField()
    tempname = models.TextField()
    filename = models.TextField()
    fileid = models.CharField(max_length=96)
    size = models.IntegerField()
    datum = models.IntegerField(null=True, blank=True)
    class Meta:
        db_table = u'jos_uddeim_attachments'

class JosUddeimBlocks(models.Model):
    id = models.IntegerField(primary_key=True)
    blocker = models.IntegerField()
    blocked = models.IntegerField()
    class Meta:
        db_table = u'jos_uddeim_blocks'

class JosUddeimConfig(models.Model):
    varname = models.TextField(primary_key=True)
    value = models.TextField()
    class Meta:
        db_table = u'jos_uddeim_config'

class JosUddeimEmn(models.Model):
    id = models.IntegerField(primary_key=True)
    userid = models.IntegerField()
    status = models.IntegerField()
    popup = models.IntegerField()
    public = models.IntegerField()
    remindersent = models.IntegerField()
    lastsent = models.IntegerField()
    autoresponder = models.IntegerField()
    autorespondertext = models.TextField()
    autoforward = models.IntegerField()
    autoforwardid = models.IntegerField()
    locked = models.IntegerField()
    class Meta:
        db_table = u'jos_uddeim_emn'

class JosUddeimSpam(models.Model):
    id = models.IntegerField(primary_key=True)
    mid = models.IntegerField()
    datum = models.IntegerField(null=True, blank=True)
    reported = models.IntegerField(null=True, blank=True)
    fromid = models.IntegerField()
    toid = models.IntegerField()
    message = models.TextField()
    class Meta:
        db_table = u'jos_uddeim_spam'

class JosUddeimUserlists(models.Model):
    id = models.IntegerField(primary_key=True)
    userid = models.IntegerField()
    name = models.CharField(max_length=120)
    description = models.TextField()
    userids = models.TextField()
    global_field = models.IntegerField(db_column='global') # Field renamed because it was a Python reserved word.
    class Meta:
        db_table = u'jos_uddeim_userlists'

class JosUsers(models.Model):
    id = models.IntegerField(primary_key=True)
    name = models.CharField(max_length=150)
    username = models.CharField(max_length=75)
    email = models.CharField(max_length=300)
    password = models.CharField(max_length=300)
    usertype = models.CharField(max_length=75)
    block = models.IntegerField()
    sendemail = models.IntegerField(null=True, db_column='sendEmail', blank=True) # Field name made lowercase.
    gid = models.IntegerField()
    registerdate = models.DateTimeField(db_column='registerDate') # Field name made lowercase.
    lastvisitdate = models.DateTimeField(db_column='lastvisitDate') # Field name made lowercase.
    activation = models.CharField(max_length=300)
    params = models.TextField()
    class Meta:
        db_table = u'jos_users'

class JosWeblinks(models.Model):
    id = models.IntegerField(primary_key=True)
    catid = models.IntegerField()
    sid = models.IntegerField()
    title = models.CharField(max_length=750)
    alias = models.CharField(max_length=765)
    url = models.CharField(max_length=750)
    description = models.TextField()
    date = models.DateTimeField()
    hits = models.IntegerField()
    published = models.IntegerField()
    checked_out = models.IntegerField()
    checked_out_time = models.DateTimeField()
    ordering = models.IntegerField()
    archived = models.IntegerField()
    approved = models.IntegerField()
    params = models.TextField()
    class Meta:
        db_table = u'jos_weblinks'

class JosXijcBlacklist(models.Model):
    id = models.IntegerField(primary_key=True)
    option = models.CharField(max_length=750)
    rulename = models.CharField(max_length=750)
    enable = models.IntegerField()
    params = models.TextField()
    class Meta:
        db_table = u'jos_xijc_blacklist'

class JosXijcConfig(models.Model):
    name = models.CharField(max_length=192)
    params = models.TextField()
    class Meta:
        db_table = u'jos_xijc_config'

class JosXijcManager(models.Model):
    option = models.CharField(max_length=750, primary_key=True)
    enable = models.IntegerField()
    params = models.TextField()
    class Meta:
        db_table = u'jos_xijc_manager'

class JosXijcWhitelist(models.Model):
    id = models.IntegerField(primary_key=True)
    option = models.CharField(max_length=750)
    rulename = models.CharField(max_length=750)
    enable = models.IntegerField()
    params = models.TextField()
    class Meta:
        db_table = u'jos_xijc_whitelist'

